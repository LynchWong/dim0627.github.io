---
slug: "went-to-startup-weekend-yokohama-2nd"
title: "HackerにとってのStartup Weekend"
eyecatch: "design5.jpg"
date: 2014-12-02
comments: true
tags: ["startup", "startup weekend"]
---

この2週間で、Startup Weekend YokohamaとStartup Weekend Tokyoに参加してきました。

まさかの2週連続の強化合宿！

様々な経験になったのは確かなので、自分のためにも、今後行く人のためにもまとめてみようと思います。

色々な人が体験談を書いてるから、僕はHackerとしての目線で書こうかな。

<!-- more -->

## Startup Weekend?

>スタートアップウィークエンド（SW）とは、あたらしいなにかをつくりだす「スタートアップ体験イベント」です。週末だけであなたは、アイディアをカタチにするための方法論を学び、スタートアップをリアルに経験することができます。
>
>SWは金曜の夜、みんながアイディアを発表するピッチから始まります。そしてハスラー・ハッカー・デザイナーでチームを組み、日曜の午後までに、ユーザーエクスペリエンスに沿った必要最小限のビジネスモデルを一気に作り上げます。ハスラーはマネジメントと顧客開発を、ハッカーは機能の開発を、デザイナーは使いやすいデザインを担当します。

どこのブログにも書いてあるんだけど一応。

金曜日の夜から始まって、「こんなもの作りたい」って人とそれに共感した人でチームを作って、日曜夜までの3日間で手や足を動かすイベントです。


## ピッチ

金曜日の夜に、アイデアがある人は1分間で発表をします。

僕は、初参加となったYokohamaではしなかった。

様子見したかったのと特にアイデアがなかったので。

あとたぶん、Hackerは「自分で作れるし言いたくない」って人も多いんじゃないかなあ。

Tokyoではピッチしたんだけど、正直言いたくないな、って気持ちも結構あった。

だからピッチは正直そんな重要なことでもない。

後悔するよ、って言う人もいるけど、しなかった回とした回がある僕からすれば、どっちでも良かったかな。


## 3日間で何をするのか

ビジネスモデルを考えて、アンケートを取ったりしてニーズがあるのかを検証して、ティザーサイトやらを作って集客をしてみたり、いっそ本当に動くサービスを作ってみたり。

そのチームのビジネスモデルによってまちまち。

Yokohamaはアイデア自体が結構壮大なものだったので、動くサービスは作れなかった。

ティザーサイトどまりだったからちょっと不完全燃焼だったかな。マークアップは楽しかったけど。

Tokyoは動くものを作ったけど、ビジネスモデルが固まりきらなかったのとWebだけでは完結しない話だったから、**作りきった**って感じは無かった。

アイデアによってやることは違うから、自分のやりたいことが明確にあるのであれば、それが出来そうなチームに入るのは大事な選択だと思う。

でも、僕はどんなメンバーとやるのか、ってことの方が大事なのかなとも思った。

YokohamaもTokyoもすごくいいメンバーに恵まれました。

だから目標の1つは確実に達成出来た。


## 参加する前にやったこと

Yokohamaが初参加で、何をするのかもよくわかってなかったからとりあえずHackerらしい予習はした。

どうせRailsなんだろと思ってたし、チュートリアルをざーっと読んでRailsが少し好きになった。

実際には使わなかったし、やっぱりあんまり好きじゃねーなって思ったけど笑

Tokyoの時は特に何かしておかなきゃってのは考えてなかったんだけど、ちょうど興味本位で調べてたFacebook認証でのログインと設計が役に立った。

どんなDB設計すんだろうなーとか、そういう話。

まあ、特にやっておくべきことはなかった。少しでもインフラを知っておくと強いかな。どうせティザーか本番は作るし。


## このイベントで何がしたかったのか

やりたかったことは2個。

なんかプロダクトを作りたかった、知らない人と話したかった。

これまでエセSIみたいなことをやって、転職を経てB2Cの仕事をして、この少ない経験値をなんとかしたいなって気持ちがあった。

もう25歳だし、技術者としてそろそろ独学を離れるべきだと思っていたし、いろいろな価値観だとかノウハウに触れていかなきゃいけないっていう焦りもあったんだと思う。


## 起業がしたいのか

別にしたくない。

どっちでもいいとかじゃなくて、したくない。忙しそうだし。

でも、したいって人の価値観にも触れてみたかったし、そういう話に乗っかりたい気持ちはあった。

一緒にやる仲間が欲しかったのかも。

技術者ってどこでも生きていけると思っていて、それなら大きな会社にいるのもよし、なんかスリルのある会社にいるのもよしだと思う。

それこそ、起業とか。


## Hackerとして参加するメリット

どうやらタダ働きになるからやだ、っていう人もいるらしい。

まあ確かにそうだけど・・・ていうか逆にお金払ってるけど・・・。

でもメリットは結構あるよ。


### 知らない誰かと1つのことをやる

誰かと一緒にものを作るっていうのは結構楽しいことだと思う。

それこそ他のエンジニアとかじゃなくて、そもそも技術とかわかんない人とか、マーケティングの人とか。

普段からデザイナや企画と調整して仕事してるよ、って人ももちろん居ると思う。僕もそうだし。

でもStartup Weekendはもっと距離が近いし、みんなが真剣になって、それぞれの出来ることを発揮して1個のものに取り組むのって、なんか楽しい。

頼って頼られての関係が出来る。


### エンジニアとしての立ち位置が見える

3日間っていう短い期間だし、少ないメンバーだし、やらなきゃいけないことはたくさんあるんだけど、実際出来るだけの技量が無かったり。

例えばFacebookのOAuth認証とか、IaaSやPaaSの利用経験とか。

特にOAuthなんてエンジニアなら誰でも出来て当然だと思うけど、僕は経験が無かったから調べながらの作業になった。

別に素で書ける必要は無いんだけど、これまでにやっていればGitHubから持ってきたりしてさっと作れたのになーと思った。

そんな感じで**エンジニアとして出来るべきこと**ってのも見えてきたりする。

なんか、デザインも出来るしプログラムも書けるよ、って人が、プログラム一本でやってる人より出来たりするしね笑


### 人脈が一気に広がる

いろんな人に出会ったし名刺も交換したし、何より、エンジニアって足りてないんだなってものすごく感じた笑

ここで知り合った人に勉強会に誘われたり、終わった後もFacebookページでやり取りしたり、たぶん今後もどっかで何かを一緒にやるんじゃないかなーって気はしてる。

というか、やりたいなと思うし。

そんな仲間はきっと仕事をしてるだけじゃ見つからないし、本当に良かったなと思う。

もし何かをするときのために、技術者としてもっと努力しなきゃなってモチベーションにもつながった。


## 3日間は長い

確かに休みを全部使ってこういうのに参加するのは抵抗があるのかもしれない。

僕も2週連続で参加したせいで、部屋の掃除も出来ないし買い物にも行けないしで結構ぐちゃぐちゃになった笑

エンジニアって結構、**勉強しなきゃいけないのはわかってるけど結局しない**って人が多いんじゃないかなと思う。

特に僕はそういう焦りがすごくあったから、こういう場に行って、初めましての人となんかしたり、勉強会に誘われて平日の予定を埋めたりするようになったのはすごく良かったな。


## HackerはStartup Weekendを楽しめる？

個人的には、Startup Weekendを一番楽しめるのはHastlerでもなくDesignerでもなくHackerなんじゃないかと思ってる。

僕もやってる最中に、来るの間違えたかなーとか、もう来たくないなーって思う場面も結構あった。

でも終わってみると、すごく楽しくためになる経験だったなって思うし、何よりまた会いたい仲間が出来たことが嬉しかった。

もちろん僕も本業でプログラムをやってるから、お金についての云々は別に考えてないわけじゃないけど、でもみんなに必要とされながら書くプログラムも楽しいもんだと思います。

というわけで来年、Yokohama開催のは都合を合わせて参加したいと思います。

## 技術的な話

特にこれといってないんだけど、出来たらいいよねレベルで。

勘違いしないでほしいけど、これが出来なきゃ楽しめないとか、活躍出来ないとか、そういうことは一切ないです。

### FacebookとかTwitter認証のあれこれ

ティザーを作った場合には、何人がテスター登録してくれたかとかその辺を集める必要があるので、結局OAuthを使った認証を書くのが一番らくだよねってことになる。

1度でいいし、PHPでもPythonでもRubyでもなんでもいいから、ざっとロジックを書いたことがあるといいなあと思った。

どういう風なフローで処理をして、どういうデータが取れるのか、とか理解してると楽だからね。

### ドメインのあれこれ

カスタムドメインを取ることがあります。

正直これは無くても全然問題ないんだけど、あるとチームのテンションが結構あがる。

お金は発生するけど、今の時代ドメインなんて1000円しないんだし、エンジニアならドメインの1つや2つ持っててもいい気はする。

なので、HerokuやGoogle App Engine、AWSでのカスタムドメインの設定とか、CNAMEやAレコードやらの設定が未経験だとちょっと辛いかなと思った。

### インフラまわりのあれこれ

ティザーとかサービスをどこで動かすかの選択肢は多くあったほうが良いと思う。

例えば本当に静的なページならGitHub Pagesが一番手軽だし、少しでもサーバサイドロジックを書かなきゃいけないならHerokuかGAEだし、本格的に動かしたいならAWSあたりになるし。

また、それに伴うIaaS、PaaSのデプロイ方法とか。手軽さとか。利用できる言語とか。

チームメンバーに自分以外のHackerがいるなら、その人が使える言語に合わせなきゃいけない場合もあると思うので、その辺は柔軟にいけたほうがいいなあと思う。

### マークアップの技術

ぶっちゃけStartup WeekendにDesignerは来ません！絶対に来ません！

理由は知らんけどたぶんHastlerやHackerはCreateの分野に居て、DesignerはDesignの分野っていう点で色々と違うものがあるのかなと思う。

というわけでHackerがマークアップをします。しかし僕を含む9割のエンジニアはデザインが出来ません。

なので良い素材サイトを探しておきましょう。

サーバサイドな僕が良く使うサイトだったり、使おうと思って使わなかったサイトだったりをあげてこの記事をしめます。

## フロントエンドをなんとかごまかそう作戦

[Iconfinder - 400,000+ free and premium icons](https://www.iconfinder.com/)

アイコン的な画像がたくさん探せる。有料のも無料のもあり。

ロゴなんてこれがあればそれなりに見栄えするものが作れる。

[Google Fonts](http://www.google.com/fonts)

フリーフォント。

ロゴなんてこれがあればそれなりに見栄えするものが作れる。

[Bootstrap | The world's most popular mobile-first and responsive front-end framework.](http://getbootstrap.com/)

言わずと知れたCSSフレームワーク。Twitter社謹製。

いわゆるBootstrap臭さを出さないようにオーバーライドしまくりましょう。

[Kube Web Framework](http://imperavi.com/kube/)

Bootstrap臭さを消せないようって人はこっち。

シンプルでフラットなので、フレンドリーなデザインには向かないと思う。

[Flat Design Gallery &amp; Showcase - An inspirational resource for designers - Flat Inspire](http://flatinspire.com/)

Flat Designのショーケース。

パクれってわけじゃなくて、色の16進数とかも出してくれてるしデザインが秀逸なサイトを見てるとインスピレーションが生まれる！と思う。

[lollytin beta 1.4 - A yummy HTML5 blockouterer!](http://lollyt.in/)

いやいやHTMLとか見るだけで鳥肌立つから！って人のためのジェネレータ。

Bootstrapベースで積み木みたいにHTMLが作れます。

LPの枠組みくらいなら1分くらいで出来そう。後は画像とか文字を挿入して完成！30分でいけるね！

[STARTUP STOCK PHOTOS](http://startupstockphotos.com/)

起業ぽい感じのWeb素材。

[Pesticide - Kill Your Css Layout Bugs](http://pesticide.io/)

ページの要素に線をつけてくれるChrome Extension。

マージンやパディングの確認に使う。

[Can I use... Support tables for HTML5, CSS3, etc](http://caniuse.com/)

W3Cが勧告している仕様について、ブラウザごとの実装状況を確認できる。

IEがさらに嫌いになる。

[App Store Marketing Guidelines - Apple Developer](https://developer.apple.com/app-store/marketing/guidelines/)

アプリのモックとかに使う画像。

Apple公式なので質はいい。

Android版はたぶんこれ。

[Device Art Generator | Android Developers](http://developer.android.com/distribute/tools/promote/device-art.html)
