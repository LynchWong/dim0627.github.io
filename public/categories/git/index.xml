<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unresolved </title>
    <link>http://yet.unresolved.xyz/categories/git/</link>
    <language>en-us</language>
    <author></author>
    <rights>(C) 2014</rights>
    <updated>2014-09-28 00:00:00 &#43;0000 UTC</updated>

    
      
        <item>
          <title>learn-git-rm-command</title>
          <link>http://yet.unresolved.xyz/blog/2014/09/28/learn-git-rm-command/</link>
          <pubDate>Sun, 28 Sep 2014 00:00:00 UTC</pubDate>
          <author></author>
          <guid>http://yet.unresolved.xyz/blog/2014/09/28/learn-git-rm-command/</guid>
          <description>

&lt;p&gt;ローカル環境でちょこちょこ作ってたやつを本番環境に載せたんだけど、それなりに解決してた環境依存が少し残ってて.gitignoreファイルをちゃんと書くことに。&lt;/p&gt;

&lt;p&gt;しかし本番でcloneしてきたファイルを&lt;strong&gt;うまいことワーキングには残してインデックスから消すやりかた&lt;/strong&gt;がわからない！&lt;/p&gt;

&lt;p&gt;というわけで少しくらいまともに勉強してみる。&lt;/p&gt;

&lt;p&gt;最初につまづいてたのはこのコマンドを連発してたから。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ git rm filename
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;どうやらこいつはインデックスだけでなくワーキングディレクトリからも消すようだ。&lt;/p&gt;

&lt;p&gt;そこでインデックスからだけ消すものはないのかと調べてたらあった。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ git rm --cached filename
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;参考にさせて頂きました:19a27096b47499bb28940f0ded663c47&#34;&gt;参考にさせて頂きました&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://transitive.info/article/git/command/rm/&#34;&gt;transitive.info - git rm 使い方&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>could-not-force-push-on-git</title>
          <link>http://yet.unresolved.xyz/blog/2014/09/27/could-not-force-push-on-git/</link>
          <pubDate>Sat, 27 Sep 2014 00:00:00 UTC</pubDate>
          <author></author>
          <guid>http://yet.unresolved.xyz/blog/2014/09/27/could-not-force-push-on-git/</guid>
          <description>

&lt;p&gt;typoを直すために&lt;code&gt;rebase -i&lt;/code&gt;やらをやってたんだけど、操作してたのがmasterブランチだったのでどうしてもforce pushがしたかった。&lt;/p&gt;

&lt;p&gt;一人で使ってたリポジトリだしね。&lt;/p&gt;

&lt;p&gt;んだけど、&lt;code&gt;-f&lt;/code&gt;をつけても&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;To git://example.com/project1.git
 ! [rejected]        master -&amp;gt; master (non-fast-forward)
error: failed to push some refs to &#39;git://example.com/project1.git&#39;
To prevent ... See the &#39;Note about
fast-forwards&#39; section of &#39;git push --help&#39; for details.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こんな感じになってしまう・・・。&lt;/p&gt;

&lt;h2 id=&#34;解決:c5ac499954fae3df373a4f81754a5ef2&#34;&gt;解決&lt;/h2&gt;

&lt;p&gt;gitリポジトリのconfigを見たらこんな項目が、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;[receive]
    denyNonFastforwards = true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;どうやらこいつを&lt;code&gt;false&lt;/code&gt;にすればよかったらしい。&lt;/p&gt;

&lt;p&gt;最初はtrueになってるもんなのかな・・・。&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>git-on-proxy</title>
          <link>http://yet.unresolved.xyz/blog/2014/09/20/git-on-proxy/</link>
          <pubDate>Sat, 20 Sep 2014 00:00:00 UTC</pubDate>
          <author></author>
          <guid>http://yet.unresolved.xyz/blog/2014/09/20/git-on-proxy/</guid>
          <description>

&lt;h2 id=&#34;事の発端:ca86a8bf870eabf283b4127081a3d388&#34;&gt;事の発端&lt;/h2&gt;

&lt;p&gt;会社ではvimを使ってます。&lt;/p&gt;

&lt;p&gt;plugin管理には&lt;a href=&#34;https://github.com/Shougo/neobundle.vim&#34;&gt;neobundle.vim&lt;/a&gt;使ってます。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.vimrc&lt;/code&gt;は&lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;で管理してます。&lt;/p&gt;

&lt;p&gt;neobundle.vimで管理してるpluginは大抵のものがGitHub上で管理されてるから、インストールとかアップデートをするときはneobundle.vimがGitHubまで見に行ってくれるんですね。&lt;/p&gt;

&lt;p&gt;ただ、当然社内はproxyを通していて、gitコマンドが通らない！&lt;/p&gt;

&lt;p&gt;ていうかそもそも&lt;strong&gt;GitHubから&lt;code&gt;.vimrc&lt;/code&gt;を落としてくることすら出来ない！いいやzipで落とせ！&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;しかしpluginの導入を手でやるのはだるい・・・。&lt;/p&gt;

&lt;p&gt;マジで？サクラエディタで頑張るしかない？&lt;/p&gt;

&lt;p&gt;いやいやそんなことはない。&lt;/p&gt;

&lt;h2 id=&#34;解決:ca86a8bf870eabf283b4127081a3d388&#34;&gt;解決&lt;/h2&gt;

&lt;p&gt;じゃあこうしようってことで、&lt;code&gt;~/.gitconfig&lt;/code&gt;をこんな感じにしたのよ。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;[https]
        proxy = http://proxy.com:8080
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ひとまず解決したんです。&lt;/p&gt;

&lt;p&gt;そしたら次は&lt;strong&gt;社内のgitに繋がらない！！&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;マジかよじゃあ&lt;code&gt;~/.gitconfig&lt;/code&gt;をちょこちょこ変えるのかよだせえよそれと思ったら既に解決してくれてる人がいた。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tanacasino.hatenablog.com/entry/2013/12/21/003750&#34;&gt;Git の http proxy に関するまとめ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;めんどくさかったけど、個々のpluginの&lt;code&gt;config&lt;/code&gt;にだけproxyの記述を追加することで解決。&lt;/p&gt;
</description>
        </item>
      
    

  </channel>
</rss>
