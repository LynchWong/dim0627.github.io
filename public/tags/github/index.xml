<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unresolved </title>
    <link>http://yet.unresolved.xyz/tags/github/</link>
    <language>en-us</language>
    <author>Daisuke Tsuji</author>
    <rights>(C) 2015</rights>
    <updated>2014-10-24 00:00:00 &#43;0000 UTC</updated>

    
      
        <item>
          <title>GitHub Pagesでカスタムドメインを使う</title>
          <link>http://yet.unresolved.xyz/blog/2014/10/24/how-to-use-custom-domain-in-github-pages/</link>
          <pubDate>Fri, 24 Oct 2014 00:00:00 UTC</pubDate>
          <author>Daisuke Tsuji</author>
          <guid>http://yet.unresolved.xyz/blog/2014/10/24/how-to-use-custom-domain-in-github-pages/</guid>
          <description>

&lt;p&gt;昨日はGAEで今日はGithubかよって感じだけど、こっちは結構詰まったのでメモしたい。&lt;/p&gt;

&lt;h2 id=&#34;事の発端:bd764d28564cc0069e229d086834b342&#34;&gt;事の発端&lt;/h2&gt;

&lt;p&gt;このOctopressのblogをカスタムドメインにしてから、&lt;code&gt;rake gen_deploy&lt;/code&gt;するとGithubからこんなメールが来るようになりました。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[dim0627.github.io] Page build warning&lt;/p&gt;

&lt;p&gt;The page build completed successfully, but returned the following warning:
GitHub Pages recently underwent some improvements (&lt;a href=&#34;https://github.com/blog/1715-faster-more-awesome-github-pages&#34;&gt;https://github.com/blog/1715-faster-more-awesome-github-pages&lt;/a&gt;) to make your site faster and more awesome, but we&amp;rsquo;ve noticed that unresolved.dimspace.xyz isn&amp;rsquo;t properly configured to take advantage of these new features. While your site will continue to work just fine, updating your domain&amp;rsquo;s configuration offers some additional speed and performance benefits. Instructions on updating your site&amp;rsquo;s IP address can be found at &lt;a href=&#34;https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages&#34;&gt;https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages&lt;/a&gt;, and of course, you can always get in touch with a human at support@github.com. For the more technical minded folks who want to skip the help docs: your site&amp;rsquo;s DNS records are pointed to a deprecated IP address.&lt;/p&gt;

&lt;p&gt;For information on troubleshooting Jekyll see:
 &lt;a href=&#34;https://help.github.com/articles/using-jekyll-with-pages#troubleshooting&#34;&gt;https://help.github.com/articles/using-jekyll-with-pages#troubleshooting&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions please contact us at &lt;a href=&#34;https://github.com/contact&#34;&gt;https://github.com/contact&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;英語かよ後で読もう、と思ってもデプロイするたびにメールが来るのは結構うざい。&lt;/p&gt;

&lt;p&gt;ので、しっかり読んでみると、&lt;strong&gt;デプロイは出来たんだけど、もっと速く動作させる方法があるからそっちにしない？&lt;/strong&gt;って話らしい。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/blog/1715-faster-more-awesome-github-pages&#34;&gt;Faster, More Awesome GitHub Pages&lt;/a&gt;を参考にすると、以下の手順を踏めばいいとのこと。&lt;/p&gt;

&lt;h3 id=&#34;username-github-ioみたいなデフォルトurlの人:bd764d28564cc0069e229d086834b342&#34;&gt;username.github.ioみたいなデフォルトURLの人&lt;/h3&gt;

&lt;p&gt;何もしないでOK&lt;/p&gt;

&lt;h3 id=&#34;www-example-comみたいなサブドメインの人:bd764d28564cc0069e229d086834b342&#34;&gt;www.example.comみたいなサブドメインの人&lt;/h3&gt;

&lt;p&gt;DNSプロバイダ側にCNAMEレコードを作って、username.github.ioに向ければOK&lt;/p&gt;

&lt;h3 id=&#34;example-comみたいにルートドメインの人:bd764d28564cc0069e229d086834b342&#34;&gt;example.comみたいにルートドメインの人&lt;/h3&gt;

&lt;p&gt;DNSプロバイダ側にAレコードを作って、207.97.227.245か204.232.175.78を向ければOK&lt;/p&gt;

&lt;p&gt;ちなみにこの3つめは少し厄介らしく、そもそもDNSプロバイダ側でALIASとやらが設定出来ないとだめなんだとか？&lt;/p&gt;

&lt;p&gt;こういう系は知識が浅くてだめだなあ。&lt;/p&gt;

&lt;h2 id=&#34;これで何が起こるの:bd764d28564cc0069e229d086834b342&#34;&gt;これで何が起こるの？&lt;/h2&gt;

&lt;p&gt;CDNからの配信になるから速いんだとか。&lt;/p&gt;

&lt;p&gt;あとDenial of service attackとかいう攻撃の対策になるらしい。&lt;/p&gt;

&lt;p&gt;あ、DOS攻撃のことか。略さずに書かれるとわからんもんだね。&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>GitHub PagesにOctopressをのっけてみる</title>
          <link>http://yet.unresolved.xyz/blog/2014/09/17/install-the-octopress-on-github-pages/</link>
          <pubDate>Wed, 17 Sep 2014 00:00:00 UTC</pubDate>
          <author>Daisuke Tsuji</author>
          <guid>http://yet.unresolved.xyz/blog/2014/09/17/install-the-octopress-on-github-pages/</guid>
          <description>

&lt;p&gt;&lt;a href=&#34;https://ja.wordpress.com/&#34;&gt;WordPress.com&lt;/a&gt;を使ってたんだけど、お金払わないと融通がきかないぽいので移行することに。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ja.wikipedia.org/wiki/Markdown&#34;&gt;Markdown&lt;/a&gt;が使ってみたかったのと、カッコいいデザインが多そうな&lt;a href=&#34;http://hatenablog.com/&#34;&gt;Hatena&lt;/a&gt;かなーと思ってたんだけど、&lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt;が面白そうなのでとりあえずノリでこっちにしてみるよ。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&#34;github-pages:b7f97f2e97092fbf52749ce6e3f01256&#34;&gt;Github Pages？&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt;は&lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;に&lt;code&gt;[ユーザ名].github.io&lt;/code&gt;って名前のリポジトリを作るだけで、pushしたページを外部公開出来るサービス。&lt;/p&gt;

&lt;p&gt;そこでよく使われるBlogフレームワーク(?)が&lt;a href=&#34;http://octopress.org/&#34;&gt;Octopress&lt;/a&gt;らしい。&lt;/p&gt;

&lt;p&gt;どうやらOctopressは&lt;a href=&#34;http://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;という静的ページジェネレータをさらに活用するためのものとのことで、&lt;/p&gt;

&lt;p&gt;このJekyll(読みはジキル？)はMarkdownとかで書いたテキストファイルを静的ページに変換したりしてくれるものみたい。&lt;/p&gt;

&lt;h2 id=&#34;octopressをインストールする:b7f97f2e97092fbf52749ce6e3f01256&#34;&gt;Octopressをインストールする&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://octopress.org/docs/setup/&#34;&gt;Octopress Setup&lt;/a&gt;が非常に良く書かれているのと、Octopress自体が見通しよく作られているので特に躓くことなく導入出来ました。&lt;/p&gt;

&lt;p&gt;Octopressは記事を書くPCに導入して丸ごとGitHubにpushしてしまう仕組みらしく、まずは個人のPCに導入が必要。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ git clone git://github.com/imathis/octopress.git octopress
$ cd octopress
$ gem install bundler
$ rbenv rehash
$ bundle install
$ rake install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で、次にデプロイする。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://octopress.org/docs/deploying/&#34;&gt;Deploying&lt;/a&gt;を見る限り、GitHub Pagesだけじゃなく、HerokuやRsyncでの利用も出来るっぽい。&lt;/p&gt;

&lt;p&gt;なんかVPSとかでも運用してる人がいるっぽいね。&lt;/p&gt;

&lt;p&gt;前述した通り今回はGitHub Pagesを利用することにしました。&lt;/p&gt;

&lt;p&gt;最初に&lt;code&gt;[ユーザ名].github.io&lt;/code&gt;って名前のリポジトリを作っておく必要があるよ。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ rake setup_github_pages
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;リポジトリのURLとかが聞かれるので、表示された説明の通り入力。&lt;/p&gt;

&lt;p&gt;pushしとく必要もあるっぽい。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ rake generate
$ rake deploy
$ git add .
$ git commit -m &#39;your message&#39;
$ git push origin source
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;rake deploy&lt;/code&gt;で乗っかるのは記事とかその辺のファイルだけなのかな？&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In a few seconds you should get an email from Github telling you that your commit has been received and will be published on your site.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;待ってりゃ公開されるぜとのことで、ちょっと待ったら公開されました。&lt;/p&gt;

&lt;h2 id=&#34;記事を書く:b7f97f2e97092fbf52749ce6e3f01256&#34;&gt;記事を書く&lt;/h2&gt;

&lt;p&gt;記事は&lt;code&gt;rake new_post[&amp;quot;title&amp;quot;]&lt;/code&gt;で行けるらしい。&lt;/p&gt;

&lt;p&gt;でもオレは&lt;code&gt;alias rake=&amp;quot;noglob rake&amp;quot;&lt;/code&gt;しとかなきゃダメだった。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ackintosh.github.io/blog/2013/02/02/cant-create-post/&#34;&gt;Octopressで記事が作れない(zsh)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;どうやらzshを使ってる人は同様の事象になるっぽい？&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rake new_post[&amp;quot;title&amp;quot;]&lt;/code&gt;で`source/_posts&amp;rsquo;に記事が作成されるのでそれを編集。&lt;/p&gt;

&lt;p&gt;Markdown用にエディタ入れようかな。&lt;/p&gt;

&lt;p&gt;記事を書いたら&lt;code&gt;rake generate&lt;/code&gt;で記事が見れる状態のファイルに変換される。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rake watch&lt;/code&gt;しとくとファイルの変更を監視して常時generateしてくれる。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rake preview&lt;/code&gt;でWEBrickが立ち上がってローカルで確認出来る。&lt;/p&gt;

&lt;p&gt;必要なものはすべて揃ってて便利。&lt;/p&gt;
</description>
        </item>
      
    

  </channel>
</rss>
