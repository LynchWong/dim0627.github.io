<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mysql on Unresolved</title>
    <link>https://yet.unresolved.xyz/tags/mysql/</link>
    <description>Recent content in Mysql on Unresolved</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 04 Feb 2016 18:00:44 +0900</lastBuildDate>
    <atom:link href="https://yet.unresolved.xyz/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>MySQL5.6&#43;ruby-mysql2でlibmysqlclient_16 not found</title>
      <link>https://yet.unresolved.xyz/blog/2016/02/04/libmysqlclient16-not-found/</link>
      <pubDate>Thu, 04 Feb 2016 18:00:44 +0900</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2016/02/04/libmysqlclient16-not-found/</guid>
      <description>&lt;p&gt;せっかくなのでMySQLを5.5から5.6にして使おうとしたらエラーした。
MySQL5.6のインストールはこの記事が非常に分かりやすかった。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.ybbo.net/2014/01/22/%E3%80%90%E3%82%B7%E3%83%B3%E3%83%97%E3%83%AB%E3%80%91centos6%E3%81%ABmysql5-6%E3%82%92yum%E3%81%A7%E7%B0%A1%E5%8D%98%E3%81%AB%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/&#34;&gt;【シンプル】CentOS6にMySQL5.6をyumで簡単にインストールする手順 | 田舎に住みたいエンジニアの日記&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ところがRails側で&lt;code&gt;ruby-mysql2&lt;/code&gt;と接合させようとするとライブラリ参照でエラー。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;LoadError: /usr/lib64/mysql/libmysqlclient.so.18: version `libmysqlclient_16&#39; not found (required by /var/www/pj/shared/bundle/ruby/2.2.0/extensions/x86_64-linux/2.2.0-static/mysql2-0.3.18/mysql2/mysql2.so) - /var/www/pj/shared/bundle/ruby/2.2.0/extensions/x86_64-linux/2.2.0-static/mysql2-0.3.18/mysql2/mysql2.so
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;困ります。
どうやら&lt;code&gt;ruby-mysql2&lt;/code&gt;を入れるタイミングで問題があったり、そもそもMySQL5.6のライブラリ側にバグがあるっていう話もあった。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://myfinder.hatenablog.com/entry/2013/04/22/150219&#34;&gt;MySQL5.6 だと ruby-mysql2 が入ったふりをする - まいんだーのはてなブログ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://qiita.com/pollseed/items/b7d187dbbd64b29820d4&#34;&gt;awsでcapistrano動かす作業ログ - Qiita&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MySQLを入れたり消したりしてたら直ったので原因も対策も不明。謎。もうやめてね。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rails&#43;RDSでMysql2::Error: Illegal mix of collations</title>
      <link>https://yet.unresolved.xyz/blog/2016/02/04/illegal-mix-of-collations/</link>
      <pubDate>Thu, 04 Feb 2016 17:52:48 +0900</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2016/02/04/illegal-mix-of-collations/</guid>
      <description>

&lt;p&gt;エラーの全貌はこう。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ActionView::Template::Error (Mysql2::Error: Illegal mix of collations (latin1_swedish_ci,IMPLICIT) and (utf8_general_ci,COERCIBLE) for operation &#39;like&#39;: SELECT...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;DEFAULT_CHARACTER_SET_NAME&lt;/code&gt;が&lt;code&gt;latin1&lt;/code&gt;になってしまっているらしく、&lt;code&gt;like&lt;/code&gt;検索で落ちてしまった。
MySQLの設定を変えなきゃいけないと思い込んでいて、RDSを使っていたからどうしょうもないのかと思って結構焦った。&lt;/p&gt;

&lt;p&gt;でもRDSもMySQLの設定は変えられるらしい。そりゃそうか。&lt;/p&gt;

&lt;a href=&#34;https://yet.unresolved.xyz/images/2016-02-04/params.png&#34; target=&#34;_blank&#34;&gt;
  &lt;amp-img src=&#34;https://yet.unresolved.xyz/images/2016-02-04/params.png&#34; alt=&#34;params&#34; width=974 height=496 layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;
&lt;/a&gt;


&lt;p&gt;これで直りました。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;ALTER DATABASE table_name COLLATE = &#39;utf8_general_ci&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;参考にさせていただきました:4b3e93c1f0fc95c9a54247a6e176ec82&#34;&gt;参考にさせていただきました&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://mariadb.com/kb/en/mariadb/setting-character-sets-and-collations/&#34;&gt;Setting Character Sets and Collations - MariaDB Knowledge Base&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[Laravel5.1]発行されたSQLと実行計画を取得する</title>
      <link>https://yet.unresolved.xyz/blog/2015/09/30/get-explain-at-laravel/</link>
      <pubDate>Wed, 30 Sep 2015 13:44:48 +0900</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2015/09/30/get-explain-at-laravel/</guid>
      <description>

&lt;p&gt;インデックス設計をするときとか、ORMを通して実際に発行されたSQLとか実行計画がほしい。&lt;/p&gt;

&lt;h2 id=&#34;sqlの発行をフックする:f8b9f4d61afe8ca86b89085edc23a796&#34;&gt;SQLの発行をフックする&lt;/h2&gt;

&lt;p&gt;ここに書いてあるとおり。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://laravel.com/docs/5.1/database#listening-for-query-events&#34;&gt;Database: Getting Started - Laravel - The PHP Framework For Web Artisans&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;DB&lt;/code&gt;の&lt;code&gt;listen&lt;/code&gt;メソッドに&lt;code&gt;$sql, $bindings, $time&lt;/code&gt;を受け取るClosureを渡せる。
なので&lt;code&gt;App\Providers\AppServiceProvider&lt;/code&gt;の&lt;code&gt;boot()&lt;/code&gt;メソッドに、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;public function boot()
{
    \DB::listen(function($sql, $bindings, $time) {
        $bindings = implode(&#39;, &#39;, $bindings);
        $method = request()-&amp;gt;method();
        $url = request()-&amp;gt;url();
        \Log::info(&amp;quot;Query [{$method}:{$url}] [{$time}s] $sql, [$bindings]&amp;quot;);
    });
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;とかやればよい。&lt;/p&gt;

&lt;h2 id=&#34;実行計画も取る:f8b9f4d61afe8ca86b89085edc23a796&#34;&gt;実行計画も取る&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;public function boot()
{
    \DB::listen(function($sql, $bindings, $time) {

        if (preg_match(&amp;quot;/^select/&amp;quot;, $sql)) {
            $explain = \DB::select(&amp;quot;explain {$sql}&amp;quot;, $bindings);
            \Log::info($explain);
        }

        $bindings = implode(&#39;, &#39;, $bindings);
        $method = request()-&amp;gt;method();
        $url = request()-&amp;gt;url();
        \Log::info(&amp;quot;Query [{$method}:{$url}] [{$time}s] $sql, [$bindings]&amp;quot;);
    });
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こう。&lt;/p&gt;

&lt;p&gt;updateとかもフックしちゃうと2回発行されたりして面倒なので、selectだけ。
selectに絞らないとしても、explainの取得がさらにフックされて・・・ってなるので、何かしら絞る必要はあり。&lt;/p&gt;

&lt;h2 id=&#34;本番では取らない:f8b9f4d61afe8ca86b89085edc23a796&#34;&gt;本番では取らない&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;public function boot()
{
    \DB::listen(function($sql, $bindings, $time) {

        if (config(&#39;app.env&#39;) !== &#39;production&#39; &amp;amp;&amp;amp; preg_match(&amp;quot;/^select/&amp;quot;, $sql)) {
            $explain = \DB::select(&amp;quot;explain {$sql}&amp;quot;, $bindings);
            \Log::info($explain);
        }

        $bindings = implode(&#39;, &#39;, $bindings);
        $method = request()-&amp;gt;method();
        $url = request()-&amp;gt;url();
        \Log::info(&amp;quot;Query [{$method}:{$url}] [{$time}s] $sql, [$bindings]&amp;quot;);
    });
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こんな感じ。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
