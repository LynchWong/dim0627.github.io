<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unresolved </title>
    <link>http://localhost:1313/tags/heroku/</link>
    <language>en-us</language>
    <author>Daisuke Tsuji</author>
    <rights>(C) 2015</rights>
    <updated>2014-12-21 00:00:00 &#43;0000 UTC</updated>

    
      
        <item>
          <title>Lobosでマイグレーションができない in Heroku</title>
          <link>http://localhost:1313/blog/2014/12/21/does-not-work-lobos-in-heroku/</link>
          <pubDate>Sun, 21 Dec 2014 00:00:00 UTC</pubDate>
          <author>Daisuke Tsuji</author>
          <guid>http://localhost:1313/blog/2014/12/21/does-not-work-lobos-in-heroku/</guid>
          <description>

&lt;p&gt;ClojureのWebアプリがとりあえず動くところまで行ったんだけど、Herokuにのせようとしたら詰まった。&lt;/p&gt;

&lt;h2 id=&#34;何が起きたか:b3814854ab9c35505a0d42182d51f32f&#34;&gt;何が起きたか&lt;/h2&gt;

&lt;p&gt;今だにHerokuの使い方がようわからんのだけど、&lt;/p&gt;

&lt;p&gt;とりあえずローカルから向き先変えるよりもSSHの方がいっかなってことで&lt;code&gt;heroku run bash&lt;/code&gt;してやってます。&lt;/p&gt;

&lt;p&gt;ローカルからだとDBをSSLで接続させないといけないし・・・。&lt;/p&gt;

&lt;p&gt;んでマイグレーションしようとしたら、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;user&amp;gt; (migrate)
nil
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;何も出ない。&lt;/p&gt;

&lt;p&gt;本当はこんな感じで、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;user=&amp;gt; (migrate)
add-sites-table
add-entries-table
nil
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;作成されたり変更されたテーブルが出てくるはず。&lt;/p&gt;

&lt;h2 id=&#34;原因はなんだったのか:b3814854ab9c35505a0d42182d51f32f&#34;&gt;原因はなんだったのか&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;lobos.migrations&lt;/code&gt;が読まれてない（というかリロードされてない）っぽい。&lt;/p&gt;

&lt;p&gt;そもそも&lt;code&gt;migrate&lt;/code&gt;自体はこんな感じで&lt;code&gt;lobos.migration&lt;/code&gt;の&lt;code&gt;do-migrations&lt;/code&gt;を呼んでます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-clojure&#34;&gt;(defcommand migrate [&amp;amp; names]
  (let [names (if (empty? names)
                (mig/pending-migrations db-spec sname)
                names)]
    (mig/do-migrations db-spec sname :up names)))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で、&lt;code&gt;do-migrations&lt;/code&gt;はこんな感じで、&lt;code&gt;list-migrations-names&lt;/code&gt;の結果を絞って実行してる。&lt;/p&gt;

&lt;p&gt;たぶんマイグレーション済みのものは除外とかそんな感じなんじゃないだろうか。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-clojure&#34;&gt;(defn do-migrations [db-spec sname with names &amp;amp; [silent]]
  (let [filter-migs #(only % (list-migrations-names))
        migrations (-&amp;gt;&amp;gt; names
                        (map str)
                        filter-migs
                        (when-&amp;gt;&amp;gt; (= with :down) reverse)
                        (map symbol)
                        (map (partial ns-resolve *migrations-namespace*))
                        (map var-get))]
    (binding [*record* nil]
      (doseq [migration migrations]
        (let [name (-&amp;gt; migration meta :name)]
          (when-not silent
            (println name))
          (if (= with :up)
            (do
              (up migration)
              (insert-migrations db-spec sname name))
            (do
              (down migration)
              (delete-migrations db-spec sname name))))))))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で&lt;code&gt;list-migrations-names&lt;/code&gt;の定義がこれ、&lt;code&gt;list-migrations&lt;/code&gt;を呼んでる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-clojure&#34;&gt;(defn list-migrations-names []
  (map #(-&amp;gt; % meta :name str) (list-migrations)))

(defn list-migrations []
  (if *reload-migrations*
    (when (.exists (migrations-file))
      (swap! migrations (constantly []))
      (use :reload *migrations-namespace*)
      @migrations)
    @migrations))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この&lt;code&gt;list-migrations&lt;/code&gt;が問題のようで、いや、たぶんHeroku側の環境がよくないんだと思うけど、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-clojure&#34;&gt;      (use :reload *migrations-namespace*)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この&lt;code&gt;:reload&lt;/code&gt;が正常に動かなくてマイグレーション対象が取れてない。&lt;/p&gt;

&lt;p&gt;だから&lt;code&gt;list-migrations&lt;/code&gt;を実行した時、1回目はきちんとロードされて、&lt;/p&gt;

&lt;p&gt;2回目は&lt;code&gt;(swap! migrations (constantly []))&lt;/code&gt;で空っぽになったままリロードされてないのが悪かったみたい。&lt;/p&gt;

&lt;p&gt;だからこんな風に、2回目の実行からは空になった&lt;code&gt;migrations&lt;/code&gt;が返ってくる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;user=&amp;gt; (use &#39;lobos.migration)
WARNING: complement already refers to: #&#39;clojure.core/complement in namespace: user, being replaced by: #&#39;lobos.migration/complement
nil
user=&amp;gt; (list-migrations)
[#&amp;lt;migrations$reify__2390 lobos.migrations$reify__2390@445aed&amp;gt; #&amp;lt;migrations$reify__2392 lobos.migrations$reify__2392@42bfb95d&amp;gt;]
user=&amp;gt; (list-migrations)
[]
user=&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;解決策:b3814854ab9c35505a0d42182d51f32f&#34;&gt;解決策&lt;/h2&gt;

&lt;p&gt;もう正直ここまでで一週間弱悩んだから、lobos使うのやめようかなとも思ったけどまあいい勉強だろうし・・・。&lt;/p&gt;

&lt;p&gt;暫定にしかならないけど、とりあえずリロードさせないようにしよう。&lt;/p&gt;

&lt;p&gt;ソースコードの通り、&lt;code&gt;*reload-migrations*&lt;/code&gt;が&lt;code&gt;true&lt;/code&gt;になっている場合にリロードが走るらしい。&lt;/p&gt;

&lt;p&gt;だからこんな感じで&lt;code&gt;false&lt;/code&gt;で上書いてしまおう。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;user=&amp;gt; (use &#39;lobos.migration)
WARNING: complement already refers to: #&#39;clojure.core/complement in namespace: user, being replaced by: #&#39;lobos.migration/complement
nil
user=&amp;gt; (ns lobos.migration)

IllegalStateException defonce already refers to: #&#39;lobos.utils/defonce in namespace: lobos.migration  clojure.lang.Namespace.warnOrFailOnReplace (Namespace.java:88)
user=&amp;gt; (def ^{:dynamic true} *reload-migrations* false)
#&#39;lobos.migration/*reload-migrations*
lobos.migration=&amp;gt; (use &#39;lobos.core)
WARNING: alter already refers to: #&#39;clojure.core/alter in namespace: lobos.migration, being replaced by: #&#39;lobos.core/alter
WARNING: drop already refers to: #&#39;clojure.core/drop in namespace: lobos.migration, being replaced by: #&#39;lobos.core/drop
nil
lobos.migration=&amp;gt; (migrate)
add-sites-table
add-entries-table
nil
lobos.migration=&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これじゃない感がすごいけど、とりあえず通った・・・。&lt;/p&gt;

&lt;p&gt;Lobosはもう開発があんまり活発じゃないみたいだなあ。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;lobos.migration&lt;/code&gt;と&lt;code&gt;lobos.migrations&lt;/code&gt;の命名はちょっといけてないような・・・。&lt;/p&gt;
</description>
        </item>
      
    

  </channel>
</rss>
