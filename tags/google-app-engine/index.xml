<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Google App Engine on Unresolved</title>
    <link>https://yet.unresolved.xyz/tags/google-app-engine/</link>
    <description>Recent content in Google App Engine on Unresolved</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Mon, 12 Jan 2015 00:19:33 +0900</lastBuildDate>
    <atom:link href="https://yet.unresolved.xyz/tags/google-app-engine/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Python on GAEで3rdパーティライブラリを使う</title>
      <link>https://yet.unresolved.xyz/blog/2015/01/12/use-the-third-party-library-in-python-on-gae/</link>
      <pubDate>Mon, 12 Jan 2015 00:19:33 +0900</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2015/01/12/use-the-third-party-library-in-python-on-gae/</guid>
      <description>

&lt;p&gt;ひさびさに&lt;a href=&#34;https://cloud.google.com/appengine/&#34;&gt;Google App Engine&lt;/a&gt;を使おうとしたらGoogle Cloud Platformだかなんだかでいろいろと変わってて戸惑った。&lt;/p&gt;

&lt;p&gt;何かというと、3rd Partyのライブラリを使うときにどうやるんだっけなっていうこと。
昔は&lt;code&gt;requirements.txt&lt;/code&gt;でうまいことやってくれなかったけ？違う？&lt;/p&gt;

&lt;p&gt;普通にBeautifulSoupとか使った気するんだけど、どうやってたんだろうか・・・。&lt;/p&gt;

&lt;h2 id=&#34;標準で使えるライブラリ:02454e4cc49b95e0abcafafbdc302335&#34;&gt;標準で使えるライブラリ&lt;/h2&gt;

&lt;p&gt;Google App Engine側に導入されてるライブラリがこれ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://cloud.google.com/appengine/docs/python/tools/libraries27&#34;&gt;Third-party Libraries in Python 2.7 - Python — Google Cloud Platform&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;基本的なやつとかWAFで使うやつしか入ってないみたい。&lt;/p&gt;

&lt;h2 id=&#34;載ってないやつは使えない:02454e4cc49b95e0abcafafbdc302335&#34;&gt;載ってないやつは使えない？&lt;/h2&gt;

&lt;p&gt;そんなことはない。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://stackoverflow.com/questions/14850853/how-to-include-third-party-python-libraries-in-google-app-engine&#34;&gt;How to include third party Python libraries in Google App Engine? - Stack Overflow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;でもずいぶん原始的な方法で、libディレクトリを作ってそこに入れなよって見解らしい。
あれ？やっぱこれ前は勝手にやってくれてなかった？&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;default git:(master)$ tree -L 2
.
|-- CONTRIB.md
|-- LICENSE
|-- README.md
|-- app.yaml
|-- cron.yaml
|-- favicon.ico
|-- lib
|   |-- feedparser.egg-info
|   |-- feedparser.py
|   |-- feedparser.pyc
|   |-- feedparsertest.py
|   |-- sgmllib3.py
|   `-- tests
|-- main.py
|-- main.pyc
`-- temp.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;パスも追加&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import sys
sys.path.insert(0, &#39;lib&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;今回は手動でzip落として入れちゃったけど、&lt;code&gt;pip install -t lib&lt;/code&gt;で入れてくのが楽かな。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Google app engineでカスタムドメインを使う</title>
      <link>https://yet.unresolved.xyz/blog/2014/10/23/how-to-use-custom-domain-in-google-app-engine/</link>
      <pubDate>Thu, 23 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2014/10/23/how-to-use-custom-domain-in-google-app-engine/</guid>
      <description>

&lt;p&gt;簡単に終わるだろうと思ってたらそれなりに手順があったのでメモ。&lt;/p&gt;

&lt;h2 id=&#34;googleによるドメインの確認:f29605b0f60814e1a345ce000c7a37f6&#34;&gt;Googleによるドメインの確認&lt;/h2&gt;

&lt;p&gt;以下の手順にそってやっていきます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://cloud.google.com/appengine/docs/domain&#34;&gt;Using a Custom Domain - Google App Engine Google Cloud Platform&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;作業は&lt;a href=&#34;https://console.developers.google.com/&#34;&gt;Developers Console&lt;/a&gt;から行います。
はじめにGoogleが、使いたいドメインが君のものか確認したいとのことなので、verifyへ。&lt;/p&gt;

&lt;a href=&#34;https://yet.unresolved.xyz/images/2014-10-23/verify.png&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;
  &lt;amp-img src=&#34;https://yet.unresolved.xyz/images/2014-10-23/verify.png&#34; alt=&#34;verify&#34; width=911 height=741 layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;
&lt;/a&gt;


&lt;p&gt;そうするとこんな画面になるので、&lt;/p&gt;

&lt;a href=&#34;https://yet.unresolved.xyz/images/2014-10-23/input_domain.png&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;
  &lt;amp-img src=&#34;https://yet.unresolved.xyz/images/2014-10-23/input_domain.png&#34; alt=&#34;input_domain&#34; width=1359 height=594 layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;
&lt;/a&gt;


&lt;p&gt;ここに表示されてるテキストを、ドメインを発行した会社さんのほうからTXTレコードとして追加すればOK。&lt;/p&gt;

&lt;p&gt;なんかこの画面、すごい頻度でChromeがエラー吐きまくったけど、クリックしなければ大丈夫だったのでなんとかしのぎました。&lt;/p&gt;

&lt;p&gt;TXTレコードの追加は、お名前.comであれば&lt;a href=&#34;http://www.onamae.com/navi/domain.html&#34;&gt;ドメインNavi&lt;/a&gt;から&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;ドメイン設定&lt;/li&gt;
&lt;li&gt;DNS関連機能の設定&lt;/li&gt;
&lt;li&gt;DNSレコード設定を利用する&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;でここに入力すればOK。&lt;/p&gt;

&lt;a href=&#34;https://yet.unresolved.xyz/images/2014-10-23/input_txt.png&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;
  &lt;amp-img src=&#34;https://yet.unresolved.xyz/images/2014-10-23/input_txt.png&#34; alt=&#34;input_txt&#34; width=972 height=415 layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;
&lt;/a&gt;


&lt;p&gt;TYPEはTXTにしてVALUEにさっきのテキストを入力。
場所にもよるけど少し待てば反映されるので、それまでGoogle側の画面で確認ボタンを何度か押してみる。
反映されてたら確認が通るはず。&lt;/p&gt;

&lt;h2 id=&#34;ドメインの選択:f29605b0f60814e1a345ce000c7a37f6&#34;&gt;ドメインの選択&lt;/h2&gt;

&lt;p&gt;確認が出来たらサブドメインとしてプレフィックスを付けるのかを決める。&lt;/p&gt;

&lt;a href=&#34;https://yet.unresolved.xyz/images/2014-10-23/step2.png&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;
  &lt;amp-img src=&#34;https://yet.unresolved.xyz/images/2014-10-23/step2.png&#34; alt=&#34;step2&#34; width=827 height=291 layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;
&lt;/a&gt;


&lt;p&gt;これによって最後のステップが変わるけど、僕は確認の時点でサブドメインとして設定したので、Google側では特に付加せずやってます。&lt;/p&gt;

&lt;h2 id=&#34;aレコードとaaaaレコードの追加:f29605b0f60814e1a345ce000c7a37f6&#34;&gt;AレコードとAAAAレコードの追加&lt;/h2&gt;

&lt;p&gt;最後はまたDNSレコードの追加。
ここに記載された一覧をそれぞれのType、Dataに応じてTXTレコードのときと同じように追加すればOK。&lt;/p&gt;

&lt;a href=&#34;https://yet.unresolved.xyz/images/2014-10-23/step3.png&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;
  &lt;amp-img src=&#34;https://yet.unresolved.xyz/images/2014-10-23/step3.png&#34; alt=&#34;step3&#34; width=823 height=313 layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;
&lt;/a&gt;


&lt;p&gt;あとは待ってればそのうち反映されるはず。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
