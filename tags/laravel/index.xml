<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Laravel on Unresolved</title>
    <link>http://localhost:1313/tags/laravel/</link>
    <description>Recent content in Laravel on Unresolved</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 04 Nov 2015 12:18:07 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/laravel/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>ELB越しのLaravelでHTTPSを使おうとして困った話</title>
      <link>http://localhost:1313/blog/2015/11/04/using-https-in-laravel/</link>
      <pubDate>Wed, 04 Nov 2015 12:18:07 +0900</pubDate>
      
      <guid>http://localhost:1313/blog/2015/11/04/using-https-in-laravel/</guid>
      <description>

&lt;h2 id=&#34;ssl証明書はelbに設置する:56aef34fa740ed018dee02e37b63f347&#34;&gt;SSL証明書はELBに設置する&lt;/h2&gt;

&lt;p&gt;何が普通なのか知らないけど、今回立ち上げた構成では&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CLIENT -&amp;gt; ELB(80 or 443) -&amp;gt; WEB(80)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;っていう構成にしていました（するつもりだった）。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://dev.classmethod.jp/cloud/aws/aws-beginner-elb-ssl/&#34;&gt;【初心者向け】ELBにSSL証明書をインストールする ｜ Developers.IO&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;問題はリリース当日に:56aef34fa740ed018dee02e37b63f347&#34;&gt;問題はリリース当日に&lt;/h2&gt;

&lt;p&gt;リリースしてみたら何やら証明書のエラーが出てる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Your connection to this site is private, but someone on the network might be able to change the look of the page.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;このページはSSL証明書が効いてるんだけど、ネットワーク上の何かがそうじゃなくしちゃうかもね？&lt;/p&gt;

&lt;p&gt;原因は&lt;strong&gt;httpsじゃないURLに飛ばすformタグがページに存在する&lt;/strong&gt;せいでした。&lt;/p&gt;

&lt;p&gt;開発環境でもオレオレ証明書を用意したりしてHTTPSで通信するようにしておくべきでした。&lt;/p&gt;

&lt;h2 id=&#34;laravelのrouteメソッド:56aef34fa740ed018dee02e37b63f347&#34;&gt;Laravelのrouteメソッド&lt;/h2&gt;

&lt;p&gt;URLのレンダリングはLaravelの&lt;code&gt;route&lt;/code&gt;メソッドを使っています。&lt;/p&gt;

&lt;p&gt;これは結構気に入っていて、後でURLを変えたいって時にある程度コストを軽減してくれる（んじゃないか）と思っているから。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://laravel.com/docs/5.1/routing#named-routes&#34;&gt;HTTP Routing - Laravel - The PHP Framework For Web Artisans&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;でも今回はこのメソッドが&lt;strong&gt;HTTPのURLをレンダリングした&lt;/strong&gt;せいで問題が起こりました。&lt;/p&gt;

&lt;h2 id=&#34;laravelでhttpsのurlを取り扱う:56aef34fa740ed018dee02e37b63f347&#34;&gt;LaravelでHTTPSのURLを取り扱う&lt;/h2&gt;

&lt;p&gt;LaravelのRoutingはこんな感じなんだけど、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;Route::get(&#39;/&#39;, [&#39;as&#39; =&amp;gt; &#39;home&#39;, function() { return view(&#39;home.index&#39;); }]);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;HTTPSのみを許容することも出来るらしい。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;Route::get(&#39;/&#39;, [&#39;https&#39;, &#39;as&#39; =&amp;gt; &#39;home&#39;, function() { return view(&#39;home.index&#39;); }]);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こうしておけば&lt;code&gt;route&lt;/code&gt;メソッドでレンダリングされるURLもHTTPSになる。&lt;/p&gt;

&lt;h2 id=&#34;そして問題が起きる:56aef34fa740ed018dee02e37b63f347&#34;&gt;そして問題が起きる&lt;/h2&gt;

&lt;p&gt;先ほどの通り、LaravelでHTTPSの設定をすると&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HTTPSのみを受け付ける&lt;/li&gt;
&lt;li&gt;&lt;code&gt;route&lt;/code&gt;メソッドがHTTPSのURLのをレンダリングする&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;事になります。&lt;/p&gt;

&lt;p&gt;今回ELBの奥にあるLaravelが載ったインスタンスはnginxが80ポートを待ち受けています。&lt;/p&gt;

&lt;p&gt;なのでHTTPSだけを許容されると困るんですね、443で通信しなきゃいけない。&lt;/p&gt;

&lt;h2 id=&#34;解決策:56aef34fa740ed018dee02e37b63f347&#34;&gt;解決策&lt;/h2&gt;

&lt;p&gt;わがままを言えば&lt;strong&gt;LaravelがHTTPを受け付けて&lt;code&gt;route&lt;/code&gt;メソッドがHTTPSのURLをレンダリングする&lt;/strong&gt;と嬉しい。&lt;/p&gt;

&lt;p&gt;けどその方法は見つからず（構成としてナンセンスなんだろう）、ELBとLaravelが載ったインスタンスの両方にSSL証明書を設置することにしました。&lt;/p&gt;

&lt;p&gt;というわけでこういう形。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CLIENT -&amp;gt; ELB(80 or 443) -&amp;gt; WEB(443)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;めでたしめでたし。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[Laravel5.1]発行されたSQLと実行計画を取得する</title>
      <link>http://localhost:1313/blog/2015/09/30/get-explain-at-laravel/</link>
      <pubDate>Wed, 30 Sep 2015 13:44:48 +0900</pubDate>
      
      <guid>http://localhost:1313/blog/2015/09/30/get-explain-at-laravel/</guid>
      <description>

&lt;p&gt;インデックス設計をするときとか、ORMを通して実際に発行されたSQLとか実行計画がほしい。&lt;/p&gt;

&lt;h2 id=&#34;sqlの発行をフックする:f8b9f4d61afe8ca86b89085edc23a796&#34;&gt;SQLの発行をフックする&lt;/h2&gt;

&lt;p&gt;ここに書いてあるとおり。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://laravel.com/docs/5.1/database#listening-for-query-events&#34;&gt;Database: Getting Started - Laravel - The PHP Framework For Web Artisans&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;DB&lt;/code&gt;の&lt;code&gt;listen&lt;/code&gt;メソッドに&lt;code&gt;$sql, $bindings, $time&lt;/code&gt;を受け取るClosureを渡せる。&lt;/p&gt;

&lt;p&gt;なので&lt;code&gt;App\Providers\AppServiceProvider&lt;/code&gt;の&lt;code&gt;boot()&lt;/code&gt;メソッドに、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;    public function boot()
    {
        \DB::listen(function($sql, $bindings, $time) {
            $bindings = implode(&#39;, &#39;, $bindings);
            $method = request()-&amp;gt;method();
            $url = request()-&amp;gt;url();
            \Log::info(&amp;quot;Query [{$method}:{$url}] [{$time}s] $sql, [$bindings]&amp;quot;);
        });
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;とかやればよい。&lt;/p&gt;

&lt;h2 id=&#34;実行計画も取る:f8b9f4d61afe8ca86b89085edc23a796&#34;&gt;実行計画も取る&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;    public function boot()
    {
        \DB::listen(function($sql, $bindings, $time) {

            if (preg_match(&amp;quot;/^select/&amp;quot;, $sql)) {
                $explain = \DB::select(&amp;quot;explain {$sql}&amp;quot;, $bindings);
                \Log::info($explain);
            }

            $bindings = implode(&#39;, &#39;, $bindings);
            $method = request()-&amp;gt;method();
            $url = request()-&amp;gt;url();
            \Log::info(&amp;quot;Query [{$method}:{$url}] [{$time}s] $sql, [$bindings]&amp;quot;);
        });
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こう。&lt;/p&gt;

&lt;p&gt;updateとかもフックしちゃうと2回発行されたりして面倒なので、selectだけ。&lt;/p&gt;

&lt;p&gt;selectに絞らないとしても、explainの取得がさらにフックされて・・・ってなるので、&lt;/p&gt;

&lt;p&gt;何かしら絞る必要はあり。&lt;/p&gt;

&lt;h2 id=&#34;本番では取らない:f8b9f4d61afe8ca86b89085edc23a796&#34;&gt;本番では取らない&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;    public function boot()
    {
        \DB::listen(function($sql, $bindings, $time) {

            if (config(&#39;app.env&#39;) !== &#39;production&#39; &amp;amp;&amp;amp; preg_match(&amp;quot;/^select/&amp;quot;, $sql)) {
                $explain = \DB::select(&amp;quot;explain {$sql}&amp;quot;, $bindings);
                \Log::info($explain);
            }

            $bindings = implode(&#39;, &#39;, $bindings);
            $method = request()-&amp;gt;method();
            $url = request()-&amp;gt;url();
            \Log::info(&amp;quot;Query [{$method}:{$url}] [{$time}s] $sql, [$bindings]&amp;quot;);
        });
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こんな感じ。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
