<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Https on Unresolved</title>
    <link>https://yet.unresolved.xyz/tags/https/</link>
    <description>Recent content in Https on Unresolved</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 Mar 2016 12:22:46 +0900</lastBuildDate>
    <atom:link href="https://yet.unresolved.xyz/tags/https/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>KloudsecでHTTPSを使ったカスタムドメインのGithubPagesを構築する</title>
      <link>https://yet.unresolved.xyz/blog/2016/03/09/use-a-custom-domain-and-secure-http-in-githubpages-by-kloudsec/</link>
      <pubDate>Wed, 09 Mar 2016 12:22:46 +0900</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2016/03/09/use-a-custom-domain-and-secure-http-in-githubpages-by-kloudsec/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://kloudsec.com/github-pages&#34;&gt;Kloudsec&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Kloudsec finds and fixes problems on your website automatically
Super easy to get started: just point your domain to our CDN’s IP address&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;なんか朝起きたら僕のブログをHTTPS化しないかというメールが来ていて、
何かと思ったらこのKloudsecというサービスがGitHub Pagesに対応したということらしかった。
調べてみたらメールをくれたのはファウンダーの方だった。&lt;/p&gt;

&lt;p&gt;おそらくGitHub Pages上にあるサイトをCDNでキャッシュして、ついでにHTTPSにしてくれるというものだと思う。
だからこっちでやることは、GitHub PagesのプロジェクトURLを登録したりDNSの向き先を変えたりするくらい。&lt;/p&gt;

&lt;p&gt;せっかくだしやるだけやってみようと思う。&lt;/p&gt;

&lt;p&gt;ちなみにこれまでは、CloudFlareを使ってHTTPS化するのが主流だった模様。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://konklone.com/post/github-pages-now-sorta-supports-https-so-use-it&#34;&gt;GitHub Pages Now (Sorta) Supports HTTPS, So Use It&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://1000ch.net/posts/2015/github-pages-custom-domain-in-https.html&#34;&gt;GitHub Pagesに設定しているカスタムドメインをHTTPS対応させる - 1000ch.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/superbrothers/items/95e5723e9bd320094537&#34;&gt;カスタムドメインの GitHub Pages で HTTPS を使う - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;対応手順:4d2882a3687d5c7df915f02afec1d585&#34;&gt;対応手順&lt;/h2&gt;

&lt;h3 id=&#34;kloudsecのユーザ登録をする:4d2882a3687d5c7df915f02afec1d585&#34;&gt;Kloudsecのユーザ登録をする&lt;/h3&gt;

&lt;p&gt;このページの下の方から登録出来る。
GitHub PagesのリポジトリURLを入れることでホスティングしているIPを取得してくれている模様。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://kloudsec.com/github-pages&#34;&gt;Kloudsec&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;dnsの向き先を変える:4d2882a3687d5c7df915f02afec1d585&#34;&gt;DNSの向き先を変える&lt;/h3&gt;

&lt;p&gt;GitHub Pagesでカスタムドメインを使ってる人はCNAMEを設定していると思うので、その辺の設定しなおしをする必要がある。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GitHubに向いているCNAMEレコードを削除&lt;/li&gt;
&lt;li&gt;Kloudsecから指定されたAレコード（対象ドメインとwww付きのもの）を新規登録&lt;/li&gt;
&lt;li&gt;Kloudsecから指定されたTXTレコードを新規登録&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;詰まったところ:4d2882a3687d5c7df915f02afec1d585&#34;&gt;詰まったところ&lt;/h2&gt;

&lt;h3 id=&#34;httpsにならない:4d2882a3687d5c7df915f02afec1d585&#34;&gt;HTTPSにならない&lt;/h3&gt;

&lt;p&gt;KloudsecはLet&amp;rsquo;s EncryptでHTTPS化しているとのこと。
サイトを登録した直後はHTTPSにならない。というか証明書が取得ペンディングになる。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://letsencrypt.org/&#34;&gt;Let&amp;rsquo;s Encrypt - Free SSL/TLS Certificates&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;これは待ってれば取得完了の旨のメールが届くのでほっとけばよい。&lt;/p&gt;

&lt;h3 id=&#34;ダッシュボード上のエラーが消えない:4d2882a3687d5c7df915f02afec1d585&#34;&gt;ダッシュボード上のエラーが消えない&lt;/h3&gt;

&lt;p&gt;ダッシュボードのトップにこのエラーメッセージが出てどう対応したら良いのかわからなかった。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;One last thing before your website is boosted and secured by Kloudsec&lt;/p&gt;
&lt;/blockquote&gt;

&lt;amp-img src=&#34;https://yet.unresolved.xyz/images/2016-03-09/dashboard.png&#34; alt=&#34;dashboard&#34; width=2332 height=1334 layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;


&lt;p&gt;DNSの設定が終わったらあとは勝手に最適化してくれるらしく、それに時間がかかっていたみたい。
つまりこれについても、こっちで出来ることは待つだけ。&lt;/p&gt;

&lt;h2 id=&#34;問題点:4d2882a3687d5c7df915f02afec1d585&#34;&gt;問題点&lt;/h2&gt;

&lt;h3 id=&#34;遅い:4d2882a3687d5c7df915f02afec1d585&#34;&gt;遅い&lt;/h3&gt;

&lt;p&gt;純粋に遅い。
GitHubにCNAMEを向けていた時の時間を計測していなかったので比較が出来ないけど、
Kloudsecはスーパーリロードした際に1秒弱かかっている。&lt;/p&gt;

&lt;amp-img src=&#34;https://yet.unresolved.xyz/images/2016-03-09/slow.png&#34; alt=&#34;slow&#34; width=1124 height=810 layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;


&lt;p&gt;HTMLのレスポンス時点で遅いので、どうしょうもない。&lt;/p&gt;

&lt;h3 id=&#34;page-optimizerがonだとampがinvalidになる:4d2882a3687d5c7df915f02afec1d585&#34;&gt;Page OptimizerがONだとAMPがinvalidになる&lt;/h3&gt;

&lt;p&gt;KloudsecのPage Optimizerというプラグインはページ速度とかを計るために、ページの末尾にJSを埋め込んでレスポンスを返す。
また、&lt;code&gt;head&lt;/code&gt;に直接書いたCSSの改行削除等も行っている模様。&lt;/p&gt;

&lt;p&gt;僕のブログは昨日記事にしたとおりAMP対応をしているので、JSが埋め込まれるのは非常に困る。&lt;/p&gt;

&lt;amp-img src=&#34;https://yet.unresolved.xyz/images/2016-03-09/amp.png&#34; alt=&#34;amp&#34; width=1140 height=1612 layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;


&lt;p&gt;これはDashboardからPage OptimizerをOFFにすれば解決出来る。&lt;/p&gt;

&lt;h3 id=&#34;追記:4d2882a3687d5c7df915f02afec1d585&#34;&gt;追記&lt;/h3&gt;

&lt;p&gt;ファウンダーの方からメールを頂きました。対応は迅速かつ丁寧で好印象でした。
レスポンスが遅いのはエッジサーバが日本にないから（ではないか）とのことで、近いうちに置くから待っててくれとのこと。&lt;/p&gt;

&lt;p&gt;AMPの件は、将来的にエンドポイントごとにPage OptimizerのON/OFFを切り替えられるようにするかもとのこと。
AMPについてはチーム全体でどうしようか考えてるそうでした。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ELB越しのLaravelでHTTPSを使おうとして困った話</title>
      <link>https://yet.unresolved.xyz/blog/2015/11/04/using-https-in-laravel/</link>
      <pubDate>Wed, 04 Nov 2015 12:18:07 +0900</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2015/11/04/using-https-in-laravel/</guid>
      <description>

&lt;h2 id=&#34;ssl証明書はelbに設置する:56aef34fa740ed018dee02e37b63f347&#34;&gt;SSL証明書はELBに設置する&lt;/h2&gt;

&lt;p&gt;何が普通なのか知らないけど、今回立ち上げた構成では&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CLIENT -&amp;gt; ELB(80 or 443) -&amp;gt; WEB(80)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;っていう構成にしていました（するつもりだった）。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://dev.classmethod.jp/cloud/aws/aws-beginner-elb-ssl/&#34;&gt;【初心者向け】ELBにSSL証明書をインストールする ｜ Developers.IO&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;問題はリリース当日に:56aef34fa740ed018dee02e37b63f347&#34;&gt;問題はリリース当日に&lt;/h2&gt;

&lt;p&gt;リリースしてみたら何やら証明書のエラーが出てる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Your connection to this site is private, but someone on the network might be able to change the look of the page.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;このページはSSL証明書が効いてるんだけど、ネットワーク上の何かがそうじゃなくしちゃうかもね？&lt;/p&gt;

&lt;p&gt;原因は&lt;strong&gt;httpsじゃないURLに飛ばすformタグがページに存在する&lt;/strong&gt;せいでした。
開発環境でもオレオレ証明書を用意したりしてHTTPSで通信するようにしておくべきでした。&lt;/p&gt;

&lt;h2 id=&#34;laravelのrouteメソッド:56aef34fa740ed018dee02e37b63f347&#34;&gt;Laravelのrouteメソッド&lt;/h2&gt;

&lt;p&gt;URLのレンダリングはLaravelの&lt;code&gt;route&lt;/code&gt;メソッドを使っています。
この機能は結構気に入っている。後でURLを変えたいって時にある程度コストを軽減してくれる（んじゃないか）と思っているから。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://laravel.com/docs/5.1/routing#named-routes&#34;&gt;HTTP Routing - Laravel - The PHP Framework For Web Artisans&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;でも今回はこのメソッドが&lt;strong&gt;HTTPのURLをレンダリングした&lt;/strong&gt;せいで問題が起こりました。&lt;/p&gt;

&lt;h2 id=&#34;laravelでhttpsのurlを取り扱う:56aef34fa740ed018dee02e37b63f347&#34;&gt;LaravelでHTTPSのURLを取り扱う&lt;/h2&gt;

&lt;p&gt;LaravelのRoutingはこんな感じなんだけど、こう記述すれば&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;Route::get(&#39;/&#39;, [&#39;as&#39; =&amp;gt; &#39;home&#39;, function() { return view(&#39;home.index&#39;); }]);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;HTTPSのみを許容することも出来るらしい。さらには&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;Route::get(&#39;/&#39;, [&#39;https&#39;, &#39;as&#39; =&amp;gt; &#39;home&#39;, function() { return view(&#39;home.index&#39;); }]);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こうしておけば&lt;code&gt;route&lt;/code&gt;メソッドでレンダリングされるURLもHTTPSになる。&lt;/p&gt;

&lt;h2 id=&#34;そして問題が起きる:56aef34fa740ed018dee02e37b63f347&#34;&gt;そして問題が起きる&lt;/h2&gt;

&lt;p&gt;先ほどの通り、LaravelでHTTPSの設定をすると&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HTTPSのみを受け付ける&lt;/li&gt;
&lt;li&gt;&lt;code&gt;route&lt;/code&gt;メソッドがHTTPSのURLのをレンダリングする&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;事になります。&lt;/p&gt;

&lt;p&gt;今回ELBの奥にあるLaravelが載ったインスタンスはnginxが80ポートを待ち受けています。
なのでHTTPSだけを許容されると困るんですね、443で通信しなきゃいけない。&lt;/p&gt;

&lt;h2 id=&#34;解決策:56aef34fa740ed018dee02e37b63f347&#34;&gt;解決策&lt;/h2&gt;

&lt;p&gt;わがままを言えば&lt;strong&gt;LaravelがHTTPを受け付けて&lt;code&gt;route&lt;/code&gt;メソッドがHTTPSのURLをレンダリングする&lt;/strong&gt;と嬉しい。
けどその方法は見つからず（構成としてナンセンスなんだろう）、ELBとLaravelが載ったインスタンスの両方にSSL証明書を設置することにしました。&lt;/p&gt;

&lt;p&gt;というわけでこういう形。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CLIENT -&amp;gt; ELB(80 or 443) -&amp;gt; WEB(443)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;めでたしめでたし。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
