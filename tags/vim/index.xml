<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vim on Unresolved</title>
    <link>http://localhost:1313/tags/vim/</link>
    <description>Recent content in Vim on Unresolved</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 22 Mar 2015 19:47:22 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/vim/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>VimのClojureプラグイン覚書</title>
      <link>http://localhost:1313/blog/2015/03/22/using-clojure-plugin-on-the-vim/</link>
      <pubDate>Sun, 22 Mar 2015 19:47:22 +0900</pubDate>
      
      <guid>http://localhost:1313/blog/2015/03/22/using-clojure-plugin-on-the-vim/</guid>
      <description>

&lt;p&gt;VimでClojure書くときのあれこれをいっつも忘れるのでまとめておこうと思う。新しいことを覚えたら随時追記していこうかな。&lt;/p&gt;

&lt;h2 id=&#34;使ってるプラグイン:4fc5f75a648d7ec78080562abdaae3a6&#34;&gt;使ってるプラグイン&lt;/h2&gt;

&lt;h3 id=&#34;tpope-vim-classpath-https-github-com-tpope-vim-classpath:4fc5f75a648d7ec78080562abdaae3a6&#34;&gt;&lt;a href=&#34;https://github.com/tpope/vim-classpath&#34;&gt;tpope/vim-classpath&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;クラスパスの設定をやってくれる。何も考えず入れればよい。&lt;/p&gt;

&lt;h3 id=&#34;guns-vim-slamhound-https-github-com-guns-vim-slamhound:4fc5f75a648d7ec78080562abdaae3a6&#34;&gt;&lt;a href=&#34;https://github.com/guns/vim-slamhound&#34;&gt;guns/vim-slamhound&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;require&lt;/code&gt;の整理をやってくれる。不要な奴は消してくれるし、ない奴はclasspathから読み込んで追加してくれる。&lt;/p&gt;

&lt;h3 id=&#34;kien-rainbow-parentheses-vim-https-github-com-kien-rainbow-parentheses-vim:4fc5f75a648d7ec78080562abdaae3a6&#34;&gt;&lt;a href=&#34;https://github.com/kien/rainbow_parentheses.vim&#34;&gt;kien/rainbow_parentheses.vim&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;括弧をrainbowな感じにしてくれる。&lt;/p&gt;

&lt;h3 id=&#34;tpope-vim-fireplace-https-github-com-tpope-vim-fireplace:4fc5f75a648d7ec78080562abdaae3a6&#34;&gt;&lt;a href=&#34;https://github.com/tpope/vim-fireplace&#34;&gt;tpope/vim-fireplace&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.venanti.us/clojure-vim/&#34;&gt;My Clojure Toolchain: Vim&lt;/a&gt;でもキラープラグインと書かれているfireplace。&lt;/p&gt;

&lt;p&gt;VimをREPLと接続してあんなことやこんなことが出来る。
このプラグインの機能、よく使う割によく忘れるんだよなあ。&lt;/p&gt;

&lt;p&gt;もはやこの記事はこの覚書のために書いたようなもの。&lt;/p&gt;

&lt;p&gt;&lt;kbd&gt;K&lt;/kbd&gt; : カーソル位置にある関数のドキュメントを表示する。&lt;/p&gt;

&lt;p&gt;&lt;kbd&gt;[d&lt;/kbd&gt; : カーソル位置にある関数のソースを表示する。&lt;/p&gt;

&lt;p&gt;&lt;kbd&gt;[&amp;lt;C-D&amp;gt;&lt;/kbd&gt; : カーソル位置にある関数のソースにジャンプする。&lt;/p&gt;

&lt;p&gt;&lt;kbd&gt;&amp;lt;C-W&amp;gt;f&lt;/kbd&gt; : カーソル位置にある関数のソースを横分割して開く。&lt;/p&gt;

&lt;p&gt;&lt;kbd&gt;&amp;lt;C-W&amp;gt;gf&lt;/kbd&gt; : カーソル位置にある関数のソースをタブ分割して開く。&lt;/p&gt;

&lt;p&gt;&lt;kbd&gt;&amp;lt;C-^&amp;gt;&lt;/kbd&gt; : ジャンプする前のファイルに戻る。&lt;/p&gt;

&lt;p&gt;&lt;kbd&gt;cpp&lt;/kbd&gt; : カーソル行をREPLで実行する。&lt;/p&gt;

&lt;p&gt;&lt;kbd&gt;cqq&lt;/kbd&gt; : カーソル行をVim内のREPLで編集モードで開く。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;:RunTest&lt;/code&gt; : テストを実行する。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;:Require&lt;/code&gt; : 読み込んでる名前空間をリロードする。&lt;/p&gt;

&lt;h3 id=&#34;venantius-vim-eastwood-https-github-com-venantius-vim-eastwood:4fc5f75a648d7ec78080562abdaae3a6&#34;&gt;&lt;a href=&#34;https://github.com/venantius/vim-eastwood&#34;&gt;venantius/vim-eastwood&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Clojure用のLint。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/scrooloose/syntastic&#34;&gt;scrooloose/syntastic&lt;/a&gt;と&lt;a href=&#34;https://github.com/jonase/eastwood&#34;&gt;jonase/eastwood&lt;/a&gt;と&lt;a href=&#34;https://github.com/tpope/vim-fireplace&#34;&gt;tpope/vim-fireplace&lt;/a&gt;が必要。&lt;/p&gt;

&lt;h3 id=&#34;venantius-vim-cljfmt-https-github-com-venantius-vim-cljfmt:4fc5f75a648d7ec78080562abdaae3a6&#34;&gt;&lt;a href=&#34;https://github.com/venantius/vim-cljfmt&#34;&gt;venantius/vim-cljfmt&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Clojure用のフォーマッター。
デフォルトで保存時のフォーマットがかかるようになってるので、入れるだけでOKのはず。&lt;/p&gt;

&lt;h2 id=&#34;使ってないプラグイン:4fc5f75a648d7ec78080562abdaae3a6&#34;&gt;使ってないプラグイン&lt;/h2&gt;

&lt;h3 id=&#34;guns-vim-clojure-static-https-github-com-guns-vim-clojure-static:4fc5f75a648d7ec78080562abdaae3a6&#34;&gt;&lt;a href=&#34;https://github.com/guns/vim-clojure-static&#34;&gt;guns/vim-clojure-static&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;シンタックスハイライト、インデントのためのプラグイン。&lt;/p&gt;

&lt;p&gt;あと&lt;code&gt;clojure.core&lt;/code&gt;の名前空間にある補完機能があるらしい。
なんかあってもなくてもあんまり変わらなかった（設定しきれなかった？）ので使うのをやめた。&lt;/p&gt;

&lt;h3 id=&#34;vim-scripts-paredit-vim-https-github-com-vim-scripts-paredit-vim:4fc5f75a648d7ec78080562abdaae3a6&#34;&gt;&lt;a href=&#34;https://github.com/vim-scripts/paredit.vim&#34;&gt;vim-scripts/paredit.vim&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;括弧の位置をあれこれ出来るやつ、だと思う。
ちょっと脳みそがそんなにたくさんの事を一気に覚えるのは無理だったので、一旦使うのをやめた。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Slamhoundを使ってClojureのrequireを自動生成する</title>
      <link>http://localhost:1313/blog/2015/02/28/name-space-form-reconstructs-for-clojure/</link>
      <pubDate>Sat, 28 Feb 2015 06:34:59 +0900</pubDate>
      
      <guid>http://localhost:1313/blog/2015/02/28/name-space-form-reconstructs-for-clojure/</guid>
      <description>

&lt;p&gt;ちょっとVimとClojureの環境を整備したくて、こんなのを読んでました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.venanti.us/clojure-vim/&#34;&gt;My Clojure Toolchain: Vim&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;そもそも&lt;code&gt;~/.lein/profiles.clj&lt;/code&gt;の存在を知らなくって、ちょっと色々書いてみることに。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/technomancy/leiningen/blob/master/doc/PROFILES.md&#34;&gt;leiningen/PROFILES.md at master · technomancy/leiningen&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;サンプルはこんな感じ。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-clojure&#34;&gt;{:user {:plugins [[lein-pprint &amp;quot;1.1.1&amp;quot;]]
        :dependencies [[slamhound &amp;quot;1.3.1&amp;quot;]]}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;lein-pprint&lt;/code&gt;は対象のLeiningenプロジェクトの情報を表示してくれるインスペクタみたいなもの。&lt;/p&gt;

&lt;p&gt;いつ使うのだろうか。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;slamhound&lt;/code&gt;はClojureの&lt;code&gt;require&lt;/code&gt;を自動生成してくれるもの。&lt;/p&gt;

&lt;p&gt;今回はこれを導入してみる。&lt;/p&gt;

&lt;h2 id=&#34;slamhound-vim:fbdac85df6e96d5628a211f2220a20d8&#34;&gt;Slamhound + Vim&lt;/h2&gt;

&lt;p&gt;Clojureのnsが書きづらいとは思わないけど、まあ面倒なのは確かなわけで自動生成してくれるならそれの方がいい。&lt;/p&gt;

&lt;p&gt;SlamhoundはLeiningenから呼び出すことが出来て、こんな感じのclojureプログラムがあったとしたら、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-clojure&#34;&gt;(ns my.namespace
  &amp;quot;I have a doc string.&amp;quot;)

(defn -main [&amp;amp; args]
  (pprint args)
  (io/copy (ByteArrayInputStream. (.getBytes &amp;quot;hello&amp;quot;))
           (first args)))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こうやると&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ lein slamhound src/my/namespace.clj
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nsのとこがこうなる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-clojure&#34;&gt;(ns my.namespace
  &amp;quot;I have a doc string.&amp;quot;
  (:require [clojure.java.io :as io]
            [clojure.pprint :refer [pprint]])
  (:import (java.io ByteArrayInputStream)))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これをVimから呼び出せるようにしたい。&lt;/p&gt;

&lt;h3 id=&#34;slamhoundの導入:fbdac85df6e96d5628a211f2220a20d8&#34;&gt;Slamhoundの導入&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/technomancy/slamhound&#34;&gt;technomancy/slamhound&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[slamhound &amp;quot;1.5.5&amp;quot;]&lt;/code&gt;を&lt;code&gt;~/.lein/profiles.clj&lt;/code&gt;の&lt;code&gt;:dependencies&lt;/code&gt;に追加するだけ。&lt;/p&gt;

&lt;p&gt;replを起動したりなんかすればLeiningenがダウンロードしてくれる。&lt;/p&gt;

&lt;h3 id=&#34;vimプラグインの導入:fbdac85df6e96d5628a211f2220a20d8&#34;&gt;Vimプラグインの導入&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/guns/vim-slamhound&#34;&gt;guns/vim-slamhound&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;NeoBundleを使っているのでこんな感じ。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;NeoBundle &#39;guns/vim-slamhound&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;NeoBundleInstall&lt;/code&gt;とかすればインストールされる。&lt;/p&gt;

&lt;h3 id=&#34;使い方:fbdac85df6e96d5628a211f2220a20d8&#34;&gt;使い方&lt;/h3&gt;

&lt;p&gt;Vim上で&lt;code&gt;:Slamhound&lt;/code&gt;すればnsが自動生成される。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;use&lt;/code&gt;で呼び出してたものも&lt;code&gt;require&lt;/code&gt;に書きなおしてくれたりする。&lt;/p&gt;

&lt;p&gt;しかしClojure周りの物って何もかも遅い感じあるけどなんとかなんないのかな・・・。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>今だからやるvimコマンド再学習</title>
      <link>http://localhost:1313/blog/2015/02/06/learning-vim-again/</link>
      <pubDate>Fri, 06 Feb 2015 20:50:35 +0900</pubDate>
      
      <guid>http://localhost:1313/blog/2015/02/06/learning-vim-again/</guid>
      <description>

&lt;p&gt;ちょうど1年ほど前からvimを使ってるんだけど、例に漏れず僕も使い始めの頃にこのサイトを参考にさせて頂きました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.jnito.com/entry/20120101/1325420213&#34;&gt;僕がサクラエディタからVimに乗り換えるまで - give IT a try&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2012年公開の記事なんだね、意外と最近。&lt;/p&gt;

&lt;p&gt;ずっとずっとやれないで居たんだけど、いずれやろうと思っていたこの記事の一節があります。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;そんなこんなで2〜3日ぐらい「Vim縛り」をやっていると、徐々にVim恐怖症は消えてくると思います。
おめでとうございます！これであなたも立派なVimmerです！！・・・と喜ぶのはまだ早いです。&lt;/p&gt;

&lt;p&gt;もう一回チートシートを見直してください。&lt;/p&gt;

&lt;p&gt;もう一回VimのTutorialをやってみてください。
あれ？Vimにこんなコマンドがあるなんて知らなかったぞ？何か便利そうやん！&lt;/p&gt;

&lt;p&gt;と思うようなコマンドをいくつか再発見できるはずです。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ようやく実施出来たのでまた忘れたりしないようにメモっておきたい。&lt;/p&gt;

&lt;h2 id=&#34;これから使っていきたい思ったvimコマンド:d126f8f0023b0ae6ada93d9e335f5bcf&#34;&gt;これから使っていきたい思ったvimコマンド&lt;/h2&gt;

&lt;h3 id=&#34;g:d126f8f0023b0ae6ada93d9e335f5bcf&#34;&gt;g;&lt;/h3&gt;

&lt;p&gt;前回編集した箇所に飛ぶ。結構長いソースとか書いてる時、あっちこっち飛んだりするから面倒に感じてた。&lt;/p&gt;

&lt;p&gt;行番号覚えたりっていう不毛なことやってたんだけど、今後はこれで済みそう。&lt;/p&gt;

&lt;h3 id=&#34;toc_2:d126f8f0023b0ae6ada93d9e335f5bcf&#34;&gt;&amp;gt;&amp;gt;, &amp;lt;&amp;lt;&lt;/h3&gt;

&lt;p&gt;カーソル行をインデントする。毎回行頭に戻って・・・ってやってたのが馬鹿らしい・・・。&lt;/p&gt;

&lt;h3 id=&#34;e-root-pm:d126f8f0023b0ae6ada93d9e335f5bcf&#34;&gt;:e **/Root.pm&lt;/h3&gt;

&lt;p&gt;ワーキングディレクトリ以下からRoot.pmにマッチするファイルを開く。
&lt;code&gt;unite.vim&lt;/code&gt;を使ってるからこっちに目がいかなかった。便利そう。&lt;/p&gt;

&lt;h3 id=&#34;e-ro:d126f8f0023b0ae6ada93d9e335f5bcf&#34;&gt;:e **/*Ro&lt;/h3&gt;

&lt;p&gt;ワーキングディレクトリ以下から*Roにマッチするファイルを開く。
さらに便利そう。&lt;/p&gt;

&lt;h3 id=&#34;gf:d126f8f0023b0ae6ada93d9e335f5bcf&#34;&gt;gf&lt;/h3&gt;

&lt;p&gt;カーソル位置にある単語と同名のファイル名を開く。
あんまり使わなそうだけど、こんなんあるんだなと感心した。&lt;/p&gt;

&lt;p&gt;そういう場面に出くわしても忘れて普通にファイル開いちゃいそうだな・・・。&lt;/p&gt;

&lt;h3 id=&#34;wqa:d126f8f0023b0ae6ada93d9e335f5bcf&#34;&gt;:wqa&lt;/h3&gt;

&lt;p&gt;全てのウィンドウを閉じて終了する。
今までは&lt;code&gt;:q&lt;/code&gt;連打してたんだけど、よく考えれば普通にダサいよね。&lt;/p&gt;

&lt;p&gt;スマートじゃないやり方は大抵何かが間違ってるんだなあと思った。&lt;/p&gt;

&lt;h3 id=&#34;j:d126f8f0023b0ae6ada93d9e335f5bcf&#34;&gt;J&lt;/h3&gt;

&lt;p&gt;カーソル行とその下の行を結合する。いつも先頭に戻って・・・ってやってた。&lt;/p&gt;

&lt;h3 id=&#34;0:d126f8f0023b0ae6ada93d9e335f5bcf&#34;&gt;0&lt;/h3&gt;

&lt;p&gt;インデントのさらに行頭へカーソルを移動する。こんなのも知らないとかまじかよって自分でも思った。&lt;/p&gt;

&lt;p&gt;いつも&lt;code&gt;^&lt;/code&gt;を使ってたので煩わしかったんですよね。&lt;/p&gt;

&lt;p&gt;ある程度操作が出来るようになるとそれでまかなってしまうから成長しないね・・・。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHPファイルの定数に触るとvimがフリーズする</title>
      <link>http://localhost:1313/blog/2015/02/05/vim-freezed-in-editting-a-php-file/</link>
      <pubDate>Thu, 05 Feb 2015 21:36:25 +0900</pubDate>
      
      <guid>http://localhost:1313/blog/2015/02/05/vim-freezed-in-editting-a-php-file/</guid>
      <description>&lt;p&gt;&lt;code&gt;neocomplcache&lt;/code&gt;のこの設定が甘かった。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;let g:neocomplcache_omni_patterns.php = &#39;[^. \t]-&amp;gt;\h\w*\|\h\w*::&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;参考になったのはこの記事。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://vim-jp.org/vim-users-jp/2011/01/06/Hack-193.html&#34;&gt;vim-jp » Hack #193: neocomplcacheの設定について知る　後編&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;g:neocomplcache_omni_patternsは、neocomplcacheがオムニ補完の関数を呼び出すためのキーワードパターンを設定します。 主な言語にはデフォルトで対応していますが、RubyやPHPなど重いものは無効化されています。 設定例のようにすれば有効化できますが、Vimがフリーズする可能性もあります。自己責任で使用してください。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;つまり原因は定数云々じゃなく&lt;code&gt;self::&lt;/code&gt;がパターンに合致したせいで、補完が走り一気に重たくなったと。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
