<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Github on Unresolved</title>
    <link>https://yet.unresolved.xyz/tags/github/</link>
    <description>Recent content in Github on Unresolved</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 Mar 2016 12:22:46 +0900</lastBuildDate>
    <atom:link href="https://yet.unresolved.xyz/tags/github/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>KloudsecでHTTPSを使ったカスタムドメインのGithubPagesを構築する</title>
      <link>https://yet.unresolved.xyz/blog/2016/03/09/use-a-custom-domain-and-secure-http-in-githubpages-by-kloudsec/</link>
      <pubDate>Wed, 09 Mar 2016 12:22:46 +0900</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2016/03/09/use-a-custom-domain-and-secure-http-in-githubpages-by-kloudsec/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://kloudsec.com/github-pages&#34;&gt;Kloudsec&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Kloudsec finds and fixes problems on your website automatically
Super easy to get started: just point your domain to our CDN’s IP address&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;なんか朝起きたら僕のブログをHTTPS化しないかというメールが来ていて、
何かと思ったらこのKloudsecというサービスがGitHub Pagesに対応したということらしかった。
調べてみたらメールをくれたのはファウンダーの方だった。&lt;/p&gt;

&lt;p&gt;おそらくGitHub Pages上にあるサイトをCDNでキャッシュして、ついでにHTTPSにしてくれるというものだと思う。
だからこっちでやることは、GitHub PagesのプロジェクトURLを登録したりDNSの向き先を変えたりするくらい。&lt;/p&gt;

&lt;p&gt;せっかくだしやるだけやってみようと思う。&lt;/p&gt;

&lt;p&gt;ちなみにこれまでは、CloudFlareを使ってHTTPS化するのが主流だった模様。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://konklone.com/post/github-pages-now-sorta-supports-https-so-use-it&#34;&gt;GitHub Pages Now (Sorta) Supports HTTPS, So Use It&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://1000ch.net/posts/2015/github-pages-custom-domain-in-https.html&#34;&gt;GitHub Pagesに設定しているカスタムドメインをHTTPS対応させる - 1000ch.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/superbrothers/items/95e5723e9bd320094537&#34;&gt;カスタムドメインの GitHub Pages で HTTPS を使う - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;対応手順:4d2882a3687d5c7df915f02afec1d585&#34;&gt;対応手順&lt;/h2&gt;

&lt;h3 id=&#34;kloudsecのユーザ登録をする:4d2882a3687d5c7df915f02afec1d585&#34;&gt;Kloudsecのユーザ登録をする&lt;/h3&gt;

&lt;p&gt;このページの下の方から登録出来る。
GitHub PagesのリポジトリURLを入れることでホスティングしているIPを取得してくれている模様。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://kloudsec.com/github-pages&#34;&gt;Kloudsec&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;dnsの向き先を変える:4d2882a3687d5c7df915f02afec1d585&#34;&gt;DNSの向き先を変える&lt;/h3&gt;

&lt;p&gt;GitHub Pagesでカスタムドメインを使ってる人はCNAMEを設定していると思うので、その辺の設定しなおしをする必要がある。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GitHubに向いているCNAMEレコードを削除&lt;/li&gt;
&lt;li&gt;Kloudsecから指定されたAレコード（対象ドメインとwww付きのもの）を新規登録&lt;/li&gt;
&lt;li&gt;Kloudsecから指定されたTXTレコードを新規登録&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;詰まったところ:4d2882a3687d5c7df915f02afec1d585&#34;&gt;詰まったところ&lt;/h2&gt;

&lt;h3 id=&#34;httpsにならない:4d2882a3687d5c7df915f02afec1d585&#34;&gt;HTTPSにならない&lt;/h3&gt;

&lt;p&gt;KloudsecはLet&amp;rsquo;s EncryptでHTTPS化しているとのこと。
サイトを登録した直後はHTTPSにならない。というか証明書が取得ペンディングになる。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://letsencrypt.org/&#34;&gt;Let&amp;rsquo;s Encrypt - Free SSL/TLS Certificates&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;これは待ってれば取得完了の旨のメールが届くのでほっとけばよい。&lt;/p&gt;

&lt;h3 id=&#34;ダッシュボード上のエラーが消えない:4d2882a3687d5c7df915f02afec1d585&#34;&gt;ダッシュボード上のエラーが消えない&lt;/h3&gt;

&lt;p&gt;ダッシュボードのトップにこのエラーメッセージが出てどう対応したら良いのかわからなかった。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;One last thing before your website is boosted and secured by Kloudsec&lt;/p&gt;
&lt;/blockquote&gt;

&lt;amp-img src=&#34;https://yet.unresolved.xyz/images/2016-03-09/dashboard.png&#34; alt=&#34;dashboard&#34; width=2332 height=1334 layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;


&lt;p&gt;DNSの設定が終わったらあとは勝手に最適化してくれるらしく、それに時間がかかっていたみたい。
つまりこれについても、こっちで出来ることは待つだけ。&lt;/p&gt;

&lt;h2 id=&#34;問題点:4d2882a3687d5c7df915f02afec1d585&#34;&gt;問題点&lt;/h2&gt;

&lt;h3 id=&#34;遅い:4d2882a3687d5c7df915f02afec1d585&#34;&gt;遅い&lt;/h3&gt;

&lt;p&gt;純粋に遅い。
GitHubにCNAMEを向けていた時の時間を計測していなかったので比較が出来ないけど、
Kloudsecはスーパーリロードした際に1秒弱かかっている。&lt;/p&gt;

&lt;amp-img src=&#34;https://yet.unresolved.xyz/images/2016-03-09/slow.png&#34; alt=&#34;slow&#34; width=1124 height=810 layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;


&lt;p&gt;HTMLのレスポンス時点で遅いので、どうしょうもない。&lt;/p&gt;

&lt;h3 id=&#34;page-optimizerがonだとampがinvalidになる:4d2882a3687d5c7df915f02afec1d585&#34;&gt;Page OptimizerがONだとAMPがinvalidになる&lt;/h3&gt;

&lt;p&gt;KloudsecのPage Optimizerというプラグインはページ速度とかを計るために、ページの末尾にJSを埋め込んでレスポンスを返す。
また、&lt;code&gt;head&lt;/code&gt;に直接書いたCSSの改行削除等も行っている模様。&lt;/p&gt;

&lt;p&gt;僕のブログは昨日記事にしたとおりAMP対応をしているので、JSが埋め込まれるのは非常に困る。&lt;/p&gt;

&lt;amp-img src=&#34;https://yet.unresolved.xyz/images/2016-03-09/amp.png&#34; alt=&#34;amp&#34; width=1140 height=1612 layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;


&lt;p&gt;これはDashboardからPage OptimizerをOFFにすれば解決出来る。&lt;/p&gt;

&lt;h3 id=&#34;追記:4d2882a3687d5c7df915f02afec1d585&#34;&gt;追記&lt;/h3&gt;

&lt;p&gt;ファウンダーの方からメールを頂きました。対応は迅速かつ丁寧で好印象でした。
レスポンスが遅いのはエッジサーバが日本にないから（ではないか）とのことで、近いうちに置くから待っててくれとのこと。&lt;/p&gt;

&lt;p&gt;AMPの件は、将来的にエンドポイントごとにPage OptimizerのON/OFFを切り替えられるようにするかもとのこと。
AMPについてはチーム全体でどうしようか考えてるそうでした。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GitHub Pagesでカスタムドメインを使う</title>
      <link>https://yet.unresolved.xyz/blog/2014/10/24/how-to-use-custom-domain-in-github-pages/</link>
      <pubDate>Fri, 24 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2014/10/24/how-to-use-custom-domain-in-github-pages/</guid>
      <description>

&lt;p&gt;昨日はGAEで今日はGithubかよって感じだけど、こっちは結構詰まったのでメモしたい。&lt;/p&gt;

&lt;h2 id=&#34;githubからwarningメールが来るようになった:bd764d28564cc0069e229d086834b342&#34;&gt;GitHubからWarningメールが来るようになった&lt;/h2&gt;

&lt;p&gt;このOctopressのblogをカスタムドメインにしてから、&lt;code&gt;rake gen_deploy&lt;/code&gt;するとGithubからこんなメールが来るようになりました。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[dim0627.github.io] Page build warning&lt;/p&gt;

&lt;p&gt;The page build completed successfully, but returned the following warning:
GitHub Pages recently underwent some improvements (&lt;a href=&#34;https://github.com/blog/1715-faster-more-awesome-github-pages&#34;&gt;https://github.com/blog/1715-faster-more-awesome-github-pages&lt;/a&gt;) to make your site faster and more awesome, but we&amp;rsquo;ve noticed that unresolved.dimspace.xyz isn&amp;rsquo;t properly configured to take advantage of these new features. While your site will continue to work just fine, updating your domain&amp;rsquo;s configuration offers some additional speed and performance benefits. Instructions on updating your site&amp;rsquo;s IP address can be found at &lt;a href=&#34;https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages&#34;&gt;https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages&lt;/a&gt;, and of course, you can always get in touch with a human at support@github.com. For the more technical minded folks who want to skip the help docs: your site&amp;rsquo;s DNS records are pointed to a deprecated IP address.&lt;/p&gt;

&lt;p&gt;For information on troubleshooting Jekyll see:
 &lt;a href=&#34;https://help.github.com/articles/using-jekyll-with-pages#troubleshooting&#34;&gt;https://help.github.com/articles/using-jekyll-with-pages#troubleshooting&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions please contact us at &lt;a href=&#34;https://github.com/contact&#34;&gt;https://github.com/contact&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;英語かよ後で読もう、と思ってもデプロイするたびにメールが来るのは結構うざい。
しっかり読んでみると、&lt;strong&gt;デプロイは出来たんだけど、もっと速く動作させる方法があるからそっちにしない？&lt;/strong&gt;って話らしい。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/blog/1715-faster-more-awesome-github-pages&#34;&gt;Faster, More Awesome GitHub Pages&lt;/a&gt;を参考にすると、以下の手順を踏めばいいとのこと。&lt;/p&gt;

&lt;h3 id=&#34;username-github-ioみたいなデフォルトurlの人:bd764d28564cc0069e229d086834b342&#34;&gt;username.github.ioみたいなデフォルトURLの人&lt;/h3&gt;

&lt;p&gt;何もしないでOK&lt;/p&gt;

&lt;h3 id=&#34;www-example-comみたいなサブドメインの人:bd764d28564cc0069e229d086834b342&#34;&gt;www.example.comみたいなサブドメインの人&lt;/h3&gt;

&lt;p&gt;DNSプロバイダ側にCNAMEレコードを作って、username.github.ioに向ければOK&lt;/p&gt;

&lt;h3 id=&#34;example-comみたいにルートドメインの人:bd764d28564cc0069e229d086834b342&#34;&gt;example.comみたいにルートドメインの人&lt;/h3&gt;

&lt;p&gt;DNSプロバイダ側にAレコードを作って、207.97.227.245か204.232.175.78を向ければOK&lt;/p&gt;

&lt;p&gt;ちなみにこの3つめは少し厄介らしく、そもそもDNSプロバイダによってはダメらしい。&lt;/p&gt;

&lt;h2 id=&#34;これで何が起こるの:bd764d28564cc0069e229d086834b342&#34;&gt;これで何が起こるの？&lt;/h2&gt;

&lt;p&gt;CDNからの配信になるから速いんだとか。あとDenial of service attackとかいう攻撃の対策になるらしい。
あ、DOS攻撃のことか。略さずに書かれるとわからんもんだね。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GitHub PagesにOctopressをのっけてみる</title>
      <link>https://yet.unresolved.xyz/blog/2014/09/17/install-the-octopress-on-github-pages/</link>
      <pubDate>Wed, 17 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2014/09/17/install-the-octopress-on-github-pages/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://ja.wordpress.com/&#34;&gt;WordPress.com&lt;/a&gt;を使ってたんだけど、お金払わないと融通がきかないぽいので移行することに。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ja.wikipedia.org/wiki/Markdown&#34;&gt;Markdown&lt;/a&gt;が使ってみたかったのと、カッコいいデザインが多そうな&lt;a href=&#34;http://hatenablog.com/&#34;&gt;Hatena&lt;/a&gt;かなーと思ってたんだけど、&lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt;が面白そうなのでとりあえずノリでこっちにしてみるよ。&lt;/p&gt;

&lt;h2 id=&#34;github-pages:b7f97f2e97092fbf52749ce6e3f01256&#34;&gt;Github Pages？&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt;は&lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;に&lt;code&gt;[ユーザ名].github.io&lt;/code&gt;って名前のリポジトリを作るだけで、pushしたページを外部公開出来るサービス。
そこでよく使われるBlogフレームワークが&lt;a href=&#34;http://octopress.org/&#34;&gt;Octopress&lt;/a&gt;らしい。静的サイトジェネレータってやつだね。&lt;/p&gt;

&lt;h2 id=&#34;octopressをインストールする:b7f97f2e97092fbf52749ce6e3f01256&#34;&gt;Octopressをインストールする&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://octopress.org/docs/setup/&#34;&gt;Octopress Setup&lt;/a&gt;が非常に良く書かれているのと、Octopress自体が見通しよく作られているので特に躓くことなく導入出来ました。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ git clone git://github.com/imathis/octopress.git octopress
$ cd octopress
$ gem install bundler
$ rbenv rehash
$ bundle install
$ rake install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で、次にデプロイする。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://octopress.org/docs/deploying/&#34;&gt;Deploying&lt;/a&gt;を見る限り、GitHub Pagesだけじゃなく、HerokuやRsyncでの利用も出来るっぽい。&lt;/p&gt;

&lt;p&gt;結局HTMLが吐き出されるだけだし、まあどこでも運用は出来るよね。&lt;/p&gt;

&lt;p&gt;前述した通り今回はGitHub Pagesを利用することにしたので、最初に&lt;code&gt;[ユーザ名].github.io&lt;/code&gt;って名前のリポジトリを作っておく必要があります。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ rake setup_github_pages
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;リポジトリのURLとかが聞かれるので、表示された説明の通り入力。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ rake generate
$ rake deploy
$ git add .
$ git commit -m &#39;your message&#39;
$ git push origin source
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;rake deploy&lt;/code&gt;で乗っかるのは記事とかその辺のファイルだけなのかな？&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In a few seconds you should get an email from Github telling you that your commit has been received and will be published on your site.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;待ってりゃ公開されるぜとのことで、ちょっと待ったら公開されました。&lt;/p&gt;

&lt;h2 id=&#34;記事を書く:b7f97f2e97092fbf52749ce6e3f01256&#34;&gt;記事を書く&lt;/h2&gt;

&lt;p&gt;記事は&lt;code&gt;rake new_post[&amp;quot;title&amp;quot;]&lt;/code&gt;で行けるらしい。でも僕は&lt;code&gt;alias rake=&amp;quot;noglob rake&amp;quot;&lt;/code&gt;しとかなきゃダメだった。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ackintosh.github.io/blog/2013/02/02/cant-create-post/&#34;&gt;Octopressで記事が作れない(zsh)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;どうやらzshを使ってる人は同様の現象になるようだ。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rake new_post[&amp;quot;title&amp;quot;]&lt;/code&gt;で&lt;code&gt;source/_posts&#39;に記事が作成されるので、それを編集したら&lt;/code&gt;rake generate`でHTMLが生成される。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rake watch&lt;/code&gt;しとくとファイルの変更を監視して常時generateしてくれるから執筆中はこっちがいいね。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
