<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Technologies on Unresolved</title>
    <link>https://yet.unresolved.xyz/technology/</link>
    <description>Recent content in Technologies on Unresolved</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Mon, 11 Apr 2016 11:37:39 +0900</lastBuildDate>
    <atom:link href="https://yet.unresolved.xyz/technology/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Railsでbootstrap-sassの必要な物だけを使う</title>
      <link>https://yet.unresolved.xyz/blog/2016/04/11/using-the-customized-bootstrap-in-rails/</link>
      <pubDate>Mon, 11 Apr 2016 11:37:39 +0900</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2016/04/11/using-the-customized-bootstrap-in-rails/</guid>
      <description>

&lt;p&gt;簡単にいうとGridシステムだけが使いたい。
他のものは全部いらない。&lt;/p&gt;

&lt;p&gt;Bootstrapをgemで入れるのはなんか気持ち悪くて好きじゃないんだけど、今回はしょうがないので使いました。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-gemfile&#34;&gt;gem &#39;bootstrap-sass&#39;, &#39;~&amp;gt; 3.3&#39;, &#39;&amp;gt;= 3.3.6&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで&lt;code&gt;application.css&lt;/code&gt;からBootstrapを読み込むことが出来る。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;@import &amp;quot;bootstrap-sprockets&amp;quot;;
@import &amp;quot;bootstrap&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;でもBootstrapの全部は要らない。Grid以外なにもいらない。&lt;/p&gt;

&lt;h2 id=&#34;bootstrap-sassはどのディレクトリにインストールされるのか:bff15c413bfe48d32c6bcf0c0e63e107&#34;&gt;bootstrap-sassはどのディレクトリにインストールされるのか&lt;/h2&gt;

&lt;p&gt;これまじでわからん。どこに入るの？
知ってる人が居たら教えてほしい。&lt;/p&gt;

&lt;h3 id=&#34;追記:bff15c413bfe48d32c6bcf0c0e63e107&#34;&gt;追記&lt;/h3&gt;

&lt;p&gt;普通に&lt;code&gt;GEM_PATH&lt;/code&gt;に入ってた。&lt;/p&gt;

&lt;h2 id=&#34;必要な物だけをimportする:bff15c413bfe48d32c6bcf0c0e63e107&#34;&gt;必要な物だけをimportする&lt;/h2&gt;

&lt;p&gt;bootstrap-sassがどこに入ってるかわからないけど、
&lt;code&gt;@import &amp;quot;bootstrap&amp;quot;&lt;/code&gt;で読み込めるってことはコンポーネントをベタ書きしてしまえば行けるはず。
とはいえコンポーネント間でも依存しているので、Gridシステムだけが欲しくても依存してるコンポーネントを書く必要がある。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;@import &amp;quot;bootstrap-sprockets&amp;quot;;
@import &amp;quot;bootstrap/variables&amp;quot;;
@import &amp;quot;bootstrap/mixins&amp;quot;;
@import &amp;quot;bootstrap/grid&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;リセットとかの恩恵もあやかりたい場合はここから、&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/twbs/bootstrap/blob/master/less/bootstrap.less&#34;&gt;bootstrap/bootstrap.less at master · twbs/bootstrap&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;このあたりを入れてしまえばコンポーネントを除外したかたちで利用することが出来る。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Core variables and mixins&lt;/li&gt;
&lt;li&gt;Reset and dependencies&lt;/li&gt;
&lt;li&gt;Core CSS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;けどそこまでするならもう全部入れてしまえよ感もあるな・・・。&lt;/p&gt;

&lt;p&gt;ひとまずやりたいことは出来たけどなんか気持ち悪いなあ。
というかBootstrap含めて、出来る限り依存は減らしたい・・・。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ハイディの魔法の英会話の件を可視化してみようじゃないか</title>
      <link>https://yet.unresolved.xyz/blog/2016/03/28/hyde-english-of-magic-and-sanddance/</link>
      <pubDate>Mon, 28 Mar 2016 20:56:07 +0900</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2016/03/28/hyde-english-of-magic-and-sanddance/</guid>
      <description>

&lt;p&gt;ひどい教授がいたもんですね。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://waranote.livedoor.biz/archives/48213295.html&#34;&gt;教授「この本買え アマゾンで星5つけろ」学生がamazonレビューで内情を暴露 : ワラノート&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;僕はこんな教授にあたらなくて良かったです。ところでこの本のレビューに以下のような投稿がありました。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ここには途轍もない量の★5レビューがあると思いますが、暇な人は、横軸に時間(単位は日)、縦軸に1日あたりに書かれた★5レビューの数として、ヒストグラムを取ってみると面白いと思います。(だいたい半年おきに、パルス的なレビュー数の鋭い極大が見られます)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;おお、確かに面白そうだ。やってみましょう。&lt;/p&gt;

&lt;h2 id=&#34;データを取る:70bc05286a8788b4334c382ea3838593&#34;&gt;データを取る&lt;/h2&gt;

&lt;p&gt;Amazonの商品情報はAPIとかがあるんですかね。ちょっと面倒なのでスクレイピングでやらせてください。
やりたいのは可視化なので、適当に書いちゃいますね。
標準出力に吐き出したものをリダイレクトでCSVにしちゃいましょう。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#!/usr/bin/env python
# -*- coding: utf-8 -*-

from bs4 import BeautifulSoup
import urllib2
import time
import re

BASE_URL = &amp;quot;http://www.amazon.co.jp/product-reviews/4062179350&amp;quot;

def get_max_page_num():
    html = BeautifulSoup(urllib2.urlopen(BASE_URL + &amp;quot;/ref=cm_cr_dp_see_all_summary&amp;quot;).read(), &#39;lxml&#39;)
    return int(html.find_all(class_=&amp;quot;page-button&amp;quot;)[-1].string)

def get_comment_list(page_num):
    html = BeautifulSoup(urllib2.urlopen(BASE_URL + &amp;quot;/ref=cm_cr_arp_d_paging_btm_{0}?pageNumber={0}&amp;quot;.format(page_num)).read(), &#39;lxml&#39;)
    return html.find(id=&amp;quot;cm_cr-review_list&amp;quot;).find_all(class_=&amp;quot;review&amp;quot;)

def parse_comment_detail(comment):
    return {&amp;quot;date&amp;quot;: re.sub(u&amp;quot;\d+日&amp;quot;, &amp;quot;&amp;quot;, comment.find(class_=&amp;quot;review-date&amp;quot;).string),
            &amp;quot;rate&amp;quot;: comment.find(class_=&amp;quot;review-rating&amp;quot;).find(class_=&amp;quot;a-icon-alt&amp;quot;).string}

def wait():
    time.sleep(5)

for i in range(get_max_page_num()):
    wait()
    page_num = i + 1
    for comment in get_comment_list(page_num):
        parsed_comment = parse_comment_detail(comment)
        print(&amp;quot;{0},{1}&amp;quot;.format(parsed_comment[&amp;quot;date&amp;quot;].encode(&amp;quot;utf-8&amp;quot;), parsed_comment[&amp;quot;rate&amp;quot;].encode(&amp;quot;utf-8&amp;quot;)))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こんな感じで取れます。ヘッダもつけておきましょう。
この時点ではただ吐き出しただけで何も集計していません。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-csv&#34;&gt;date,rate
2015年2月,5つ星のうち1.0
2014年6月,5つ星のうち1.0
2014年7月,5つ星のうち1.0
2016年3月,5つ星のうち1.0
2015年1月,5つ星のうち1.0
2016年3月,5つ星のうち1.0
2016年2月,5つ星のうち1.0
2016年3月,5つ星のうち1.0
  :
  :
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;あ、一桁の月は0埋めで2桁になるように手動で修正しました。抽出した後に気付いたので、正規表現でうまいことやりました。&lt;/p&gt;

&lt;h2 id=&#34;可視化する:70bc05286a8788b4334c382ea3838593&#34;&gt;可視化する&lt;/h2&gt;

&lt;p&gt;何を使おうか迷ったんですが、僕はそもそも可視化とかあんまり詳しくないんですよね。
ただ、こないだマイクロソフト社から発表された&lt;a href=&#34;https://sanddance.azurewebsites.net/BeachPartyApp/BeachPartyApp.html&#34;&gt;SandDance&lt;/a&gt;というちょうどいいものがあるので、これを使ってみましょう。&lt;/p&gt;

&lt;p&gt;これは何かというと、CSVやらなんたらを乗っけると幾つかのパターンで可視化してくれるというものです。
ファセットも出来たりして便利なのですが、意外と可視化したいデータってなかったりするんですよね。&lt;/p&gt;

&lt;p&gt;前置きはおいておいて、取り込んでみましょう。
取り込んだ直後はcolumnという形式で表示してくれます。これでいうと、月ごとのレビュー数ですね。&lt;/p&gt;

&lt;a href=&#34;https://yet.unresolved.xyz/images/2016-03-28/after_load.png&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;
  &lt;amp-img src=&#34;https://yet.unresolved.xyz/images/2016-03-28/after_load.png&#34; alt=&#34;after_load&#34; width=1057 height=644 layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;
&lt;/a&gt;


&lt;p&gt;これだと評価値がわからないので、評価ごとに色をつけてみましょう。&lt;/p&gt;

&lt;a href=&#34;https://yet.unresolved.xyz/images/2016-03-28/column_colored.png&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;
  &lt;amp-img src=&#34;https://yet.unresolved.xyz/images/2016-03-28/column_colored.png&#34; alt=&#34;column_colored&#34; width=1262 height=654 layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;
&lt;/a&gt;


&lt;p&gt;ピンクが評価5のものです。随分見やすくなりましたね。ほとんどが評価5なのがよくわかります。
どうやら2014年7月に1度大きな波が来て、その後2014年11月、2014年12月と大量に評価されているようです。
8月から10月に評価が全く付いていないのは、おそらく評価を強いられていた学生が夏休みだったからでしょう。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;だいたい半年おきに、パルス的なレビュー数の鋭い極大が見られます&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;半年ごとではなかったですが、何か恣意的なものを感じるグラフなのは確かですね。&lt;/p&gt;

&lt;p&gt;ちなみに月ごとのファセット表示をするとこうなります。
&lt;a href=&#34;https://yet.unresolved.xyz/images/2016-03-28/column_facet.png&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;
  &lt;amp-img src=&#34;https://yet.unresolved.xyz/images/2016-03-28/column_facet.png&#34; alt=&#34;column_facet&#34; width=1251 height=646 layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;
&lt;/a&gt;

違った表示の仕方も出来たり。
&lt;a href=&#34;https://yet.unresolved.xyz/images/2016-03-28/density.png&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;
  &lt;amp-img src=&#34;https://yet.unresolved.xyz/images/2016-03-28/density.png&#34; alt=&#34;density&#34; width=1393 height=649 layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;
&lt;/a&gt;

データによってはもっと面白い表示が出来そうですね。&lt;/p&gt;

&lt;p&gt;最後にCSVを貼っておくので、使いたい人がいたらどうぞ。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-csv&#34;&gt;date,rate
2015年02月,5つ星のうち1.0
2014年06月,5つ星のうち1.0
2014年07月,5つ星のうち1.0
2016年03月,5つ星のうち1.0
2015年01月,5つ星のうち1.0
2016年03月,5つ星のうち1.0
2016年02月,5つ星のうち1.0
2016年03月,5つ星のうち1.0
2016年03月,5つ星のうち1.0
2016年03月,5つ星のうち2.0
2016年03月,5つ星のうち1.0
2016年03月,5つ星のうち1.0
2016年03月,5つ星のうち1.0
2016年03月,5つ星のうち1.0
2016年03月,5つ星のうち1.0
2016年03月,5つ星のうち1.0
2014年10月,5つ星のうち3.0
2016年03月,5つ星のうち1.0
2016年03月,5つ星のうち1.0
2014年10月,5つ星のうち3.0
2013年08月,5つ星のうち3.0
2013年01月,5つ星のうち5.0
2012年10月,5つ星のうち5.0
2015年07月,5つ星のうち4.0
2013年05月,5つ星のうち5.0
2016年03月,5つ星のうち3.0
2014年08月,5つ星のうち4.0
2014年07月,5つ星のうち5.0
2013年07月,5つ星のうち5.0
2013年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2013年01月,5つ星のうち5.0
2013年07月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2013年01月,5つ星のうち5.0
2013年01月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2013年01月,5つ星のうち5.0
2013年01月,5つ星のうち5.0
2013年07月,5つ星のうち5.0
2013年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2013年07月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年06月,5つ星のうち5.0
2013年07月,5つ星のうち5.0
2013年07月,5つ星のうち5.0
2013年01月,5つ星のうち5.0
2013年01月,5つ星のうち5.0
2013年07月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2013年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年06月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2013年12月,5つ星のうち5.0
2013年12月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2013年01月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2013年12月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年07月,5つ星のうち4.0
2014年07月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2013年01月,5つ星のうち5.0
2014年07月,5つ星のうち4.0
2014年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2013年12月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2013年12月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年06月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2013年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2013年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2013年07月,5つ星のうち5.0
2014年06月,5つ星のうち5.0
2013年12月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2013年07月,5つ星のうち5.0
2013年12月,5つ星のうち5.0
2013年07月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年07月,5つ星のうち4.0
2014年07月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年06月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2013年07月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年06月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年06月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2013年07月,5つ星のうち5.0
2014年06月,5つ星のうち5.0
2013年12月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年06月,5つ星のうち5.0
2013年07月,5つ星のうち5.0
2013年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2013年07月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2013年01月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2013年06月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2013年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2013年06月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年06月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2013年06月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2013年06月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち4.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年07月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2016年03月,5つ星のうち4.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2015年01月,5つ星のうち5.0
2014年11月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2015年01月,5つ星のうち5.0
2015年01月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2015年01月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2015年01月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2015年01月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2015年01月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2014年12月,5つ星のうち5.0
2015年01月,5つ星のうち5.0
2015年01月,5つ星のうち5.0
2015年03月,5つ星のうち5.0
2015年01月,5つ星のうち5.0
2015年07月,5つ星のうち5.0
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>swiftでUICollectionViewを扱う</title>
      <link>https://yet.unresolved.xyz/blog/2016/03/28/uicollection-view-by-swift/</link>
      <pubDate>Mon, 28 Mar 2016 12:21:32 +0900</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2016/03/28/uicollection-view-by-swift/</guid>
      <description>&lt;p&gt;セクションってなにさ&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.apple.com/library/ios/documentation/UIKit/Reference/UICollectionViewDataSource_protocol/#//apple_ref/occ/intfm/UICollectionViewDataSource/numberOfSectionsInCollectionView:&#34;&gt;UICollectionViewDataSource Protocol Reference&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Asks your data source object for the number of sections in the collection view.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;コレクションをグループ化することが出来るらしい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blogios.stack3.net/archives/932&#34;&gt;UICollectionView その3 セクション | Cyber Passion for iOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/stack3/UICollectionViewSample&#34;&gt;stack3/UICollectionViewSample&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;セクション数を指定するメソッドはこれ。
セクション単位にヘッダーを付けたりもできるらしい。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;override func numberOfSectionsInCollectionView(collectionView: UICollectionView) -&amp;gt; Int {
    return 1
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;個々のセルを生成するメソッド。
CellにIdentifierを設定していないといけない。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;override func collectionView(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath) -&amp;gt; UICollectionViewCell {
    let cell:Post = collectionView.dequeueReusableCellWithReuseIdentifier(&amp;quot;postCell&amp;quot;, forIndexPath: indexPath) as! Post
    return cell
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;1セクションに表示するセル数の定義。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;override func collectionView(collectionView: UICollectionView, numberOfItemsInSection section: Int) -&amp;gt; Int {
    return 20
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;swiftもむずいけどXcodeの使い方のほうがむずい。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AndroidのChromeでCSSのBackgroundImageが設定されない</title>
      <link>https://yet.unresolved.xyz/blog/2016/03/22/backgroundimage-is-not-worked/</link>
      <pubDate>Tue, 22 Mar 2016 13:32:47 +0900</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2016/03/22/backgroundimage-is-not-worked/</guid>
      <description>

&lt;p&gt;Androidのスマホ（Nexus5 Android 6.0.1）からアクセスした時に&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;background-image: url(/images/bg.png);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;とかやってる背景画像が読み込まれないっていう現象に陥った。
PCからだと再現しないから全然原因が掴めなかったんだけど、考えられる原因は以下のものくらいだった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AMPの対応をしたせい&lt;/li&gt;
&lt;li&gt;ショートハンドで複数画像を指定したせい&lt;/li&gt;
&lt;li&gt;CloudFlareにしたせい&lt;/li&gt;
&lt;li&gt;Androidのせい&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ショートハンドのはこういうこと。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;background: repeat center/auto url(/images/lay.png),
            no-repeat bottom/cover url(/images/bg.png);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;まず1つ目のAMP対応の件は、AMP対応してないページでも同一の事象が発生していたので違った。
ショートハンドも違う書き方をして改善されなかったので、違う。
というわけでCloudFlareのせい？ちなみにキャッシュクリアは効果がなかった。&lt;/p&gt;

&lt;p&gt;調べてみると似たような記事がいくつか見つかった。
やっぱりこれが原因なのかな？&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://support.mozilla.org/ja/questions/984143&#34;&gt;Background CSS images not loading in firefox when using a CDN | Firefox サポートフォーラム | Mozilla サポート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wordpress.org/support/topic/cdn-feature-not-loading-css-background-images&#34;&gt;WordPress › Support » CDN Feature Not Loading CSS Background Images&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wordpress.org/support/topic/header-image-not-displaying-with-cloudflare-ssl&#34;&gt;WordPress › Support » Header image not displaying with Cloudflare SSL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;と思ったらiPhoneだと再現しない。Androidのせいなのか？
それとも僕が、Androidに対応してないショートハンドで書いてしまってるのか？&lt;/p&gt;

&lt;p&gt;しかし、ショートハンドをやめてみても画像は表示されない。
それも、小さい画像は表示されて大きな画像が表示されない。
ファイルサイズの問題なのだろうか？そうするとやはり、CloudFlareが何かやっている？
まさか相対パスじゃなくて絶対パスじゃなきゃだめ？とも思ったが変えてみても改善されない。
こうなったら違うサーバに配置してCloudFlareを経由せずにアクセスしてみれば・・・、でもダメ。
ってことはCloudFlareも関係ない。&lt;/p&gt;

&lt;p&gt;ここまでの対応をまとめてみよう。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AMPじゃないページで確認&lt;/li&gt;
&lt;li&gt;ショートハンドをやめて確認&lt;/li&gt;
&lt;li&gt;キャッシュをクリアして確認&lt;/li&gt;
&lt;li&gt;絶対パスに変えて確認&lt;/li&gt;
&lt;li&gt;CloudFlareを経由しないサーバに配置して確認&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これらは全部効果なし。&lt;/p&gt;

&lt;h2 id=&#34;画像をリサイズしたら直った:c4a8cae708d9ae9be9901a90f98f5ef4&#34;&gt;画像をリサイズしたら直った&lt;/h2&gt;

&lt;p&gt;あまりしっくりくる結論じゃないんだけど、
僕の手元で再現する条件は「画像を&lt;code&gt;background-size: cover;&lt;/code&gt;でアスペクトが違いすぎるblock要素に設定する」でした。&lt;/p&gt;

&lt;p&gt;2つのサイトで同様の事象が発生していたんだけど、画像をリサイズしたらこの問題は解決した。
余裕があれば、もう一度上記の条件を整えて再現するかを確認したいと思う。&lt;/p&gt;

&lt;h3 id=&#34;追記:c4a8cae708d9ae9be9901a90f98f5ef4&#34;&gt;追記&lt;/h3&gt;

&lt;p&gt;画像サイズを変えて再現しました。
なんでなんだ？&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Railsでサービスを作るときに参考にしたサイトのメモ</title>
      <link>https://yet.unresolved.xyz/blog/2016/03/18/rails-memo/</link>
      <pubDate>Fri, 18 Mar 2016 14:23:38 +0900</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2016/03/18/rails-memo/</guid>
      <description>

&lt;p&gt;メモなのにどっか行ってしまって、後で参考にしたいのにーってことがあったので、もうここに載っけてしまえ。&lt;/p&gt;

&lt;p&gt;とりとめもなくメモったもので整形もしてないけどとりあえず。&lt;/p&gt;

&lt;h2 id=&#34;unicorn:62ec319eb1157394837c57acec06e1bb&#34;&gt;Unicorn&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://omohayui.hatenablog.com/entry/2015/07/18/154837&#34;&gt;nginx + unicorn + Rails でサイトをつくる - omohayui blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/Salinger/items/5350b23f8b4e0dcdbe23&#34;&gt;Rails 4.2 + Unicorn + Nginx でアプリケーションサーバの構築 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/herokaijp/devcenter/wiki/Rails-unicorn&#34;&gt;Rails unicorn · herokaijp/devcenter Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tachesimazzoca.github.io/wiki/rails3/unicorn.html#toctree-3-2&#34;&gt;Unicorn | Rails3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/kizashi1122/items/c827f0675dff4d82d06c&#34;&gt;Nginx で Rails の assets (css, js) にアクセスできない（403 forbidden が返る） - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/a_ishidaaa/items/74de8bdaecd637063c40&#34;&gt;[Rails]production環境で動かす - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/akito1986/items/56198edcafc222b320a8&#34;&gt;nginx + unicorn + Railsの設定方法 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://hideack.hatenablog.com/entry/2013/11/16/162905&#34;&gt;unicornでgraceful restartする - テノニッキ (@hideack &amp;rsquo;s diary)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;paging:62ec319eb1157394837c57acec06e1bb&#34;&gt;Paging&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.techscore.com/blog/2013/01/07/rails%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E7%B4%B9%E4%BB%8B-%E3%83%9A%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E3%82%92%E8%A1%8C%E3%81%86%E3%80%8Ckaminari%E3%80%8D/&#34;&gt;» Railsライブラリ紹介: ページングを行う「kaminari」 TECHSCORE BLOG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;view-layouts:62ec319eb1157394837c57acec06e1bb&#34;&gt;View layouts&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://guides.rubyonrails.org/action_view_overview.html#content-for&#34;&gt;Action View Overview — Ruby on Rails Guides&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;validation:62ec319eb1157394837c57acec06e1bb&#34;&gt;Validation&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/adzap/validates_timeliness&#34;&gt;adzap/validates_timeliness: Date and time validation plugin for ActiveModel and Rails. Supports multiple ORMs and allows custom date/time formats.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;block:62ec319eb1157394837c57acec06e1bb&#34;&gt;Block&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://biboroku.megaya.net/entry/2015/06/09/234020&#34;&gt;rubyのブロックについてちゃんと勉強し直した - びぼろく！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://melborne.github.io/2008/08/09/Ruby-Mix-in/&#34;&gt;Rubyのブロックはメソッドに対するメソッドのMix-inだ！&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;string:62ec319eb1157394837c57acec06e1bb&#34;&gt;String&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ref.xaio.jp/ruby/classes/string/encode&#34;&gt;encode, encode! (String) - Rubyリファレンス&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;csv-upload:62ec319eb1157394837c57acec06e1bb&#34;&gt;CSV Upload&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/13547018/csv-import-issue&#34;&gt;ruby on rails - CSV Import issue - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.ruby-lang.org/ja/1.9.3/class/CSV.html&#34;&gt;class CSV (Ruby 1.9.3)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/labocho/items/8559576b71642b79df67&#34;&gt;Ruby - CSV を文字コード変換しつつロード - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;csv-download:62ec319eb1157394837c57acec06e1bb&#34;&gt;CSV Download&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://k-shogo.github.io/article/2013/11/05/rails-csv-download/&#34;&gt;railsにCSV形式でのダウンロード機能を追加する | dev.wan.co&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ruby-rails.hatenadiary.com/entry/20141119/1416398472&#34;&gt;RailsでCSV/Excelのダウンロード機能の実装方法 - Rails Webook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.ruby-lang.org/ja/1.9.3/class/CSV.html&#34;&gt;class CSV (Ruby 1.9.3)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;routing:62ec319eb1157394837c57acec06e1bb&#34;&gt;routing&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://railsdoc.com/routes&#34;&gt;ルーティング(routes) - - Railsドキュメント&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;scaffold:62ec319eb1157394837c57acec06e1bb&#34;&gt;Scaffold&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://guides.rubyonrails.org/action_view_overview.html#using-action-view-with-rails&#34;&gt;Action View Overview — Ruby on Rails Guides&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;migration-types:62ec319eb1157394837c57acec06e1bb&#34;&gt;migration types&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/4384284/rails-generate-model-fieldtype-what-are-the-options-for-fieldtype&#34;&gt;activerecord - rails generate model field:type -what are the options for field:type? - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;link-to:62ec319eb1157394837c57acec06e1bb&#34;&gt;link_to&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/wada811/items/cd952471b75355079ca2&#34;&gt;[Ruby on Rails] link_to の使い方 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/7052399/adding-hash-parameter-in-the-url-rails-routes&#34;&gt;Adding Hash parameter in the URL Rails Routes - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Kloudsecを使ってカスタムドメインでHTTPSなGithub Pagesを構築する</title>
      <link>https://yet.unresolved.xyz/blog/2016/03/09/use-a-custom-domain-and-secure-http-in-githubpages-by-kloudsec/</link>
      <pubDate>Wed, 09 Mar 2016 12:22:46 +0900</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2016/03/09/use-a-custom-domain-and-secure-http-in-githubpages-by-kloudsec/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://kloudsec.com/github-pages&#34;&gt;Kloudsec&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Kloudsec finds and fixes problems on your website automatically
Super easy to get started: just point your domain to our CDN’s IP address&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;なんか朝起きたら僕のブログをHTTPS化しないかというメールが来ていて、
何かと思ったらこのKloudsecというサービスがGitHub Pagesに対応したということらしかった。
調べてみたらメールをくれたのはファウンダーの方だった。&lt;/p&gt;

&lt;p&gt;おそらくGitHub Pages上にあるサイトをCDNでキャッシュして、ついでにHTTPSにしてくれるというものだと思う。
だからこっちでやることは、GitHub PagesのプロジェクトURLを登録したりDNSの向き先を変えたりするくらい。&lt;/p&gt;

&lt;p&gt;せっかくだしやるだけやってみようと思う。
ちなみにこれまでは、CloudFlareを使ってHTTPS化するのが主流だった模様。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://konklone.com/post/github-pages-now-sorta-supports-https-so-use-it&#34;&gt;GitHub Pages Now (Sorta) Supports HTTPS, So Use It&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://1000ch.net/posts/2015/github-pages-custom-domain-in-https.html&#34;&gt;GitHub Pagesに設定しているカスタムドメインをHTTPS対応させる - 1000ch.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/superbrothers/items/95e5723e9bd320094537&#34;&gt;カスタムドメインの GitHub Pages で HTTPS を使う - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;対応手順:4d2882a3687d5c7df915f02afec1d585&#34;&gt;対応手順&lt;/h2&gt;

&lt;p&gt;ユーザ登録をしてDNSの設定を直すだけ。このページ（&lt;a href=&#34;https://kloudsec.com/github-pages&#34;&gt;Kloudsec&lt;/a&gt;）の下の方から登録出来る。
GitHub PagesのリポジトリURLを入れることでホスティングしているIPを取得してくれている模様。&lt;/p&gt;

&lt;p&gt;GitHub Pagesでカスタムドメインを使ってる人はCNAMEを設定していると思うので、その辺の設定しなおしをする必要がある。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GitHubに向いているCNAMEレコードを削除&lt;/li&gt;
&lt;li&gt;Kloudsecから指定されたAレコード（対象ドメインとwww付きのもの）を新規登録&lt;/li&gt;
&lt;li&gt;Kloudsecから指定されたTXTレコードを新規登録&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;httpsにならない:4d2882a3687d5c7df915f02afec1d585&#34;&gt;HTTPSにならない&lt;/h2&gt;

&lt;p&gt;KloudsecはLet&amp;rsquo;s EncryptでHTTPS化しているとのこと。
サイトを登録した直後はHTTPSにならない。というか証明書が取得ペンディングになる。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://letsencrypt.org/&#34;&gt;Let&amp;rsquo;s Encrypt - Free SSL/TLS Certificates&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;これは待ってれば取得完了の旨のメールが届くのでほっとけばよかった。&lt;/p&gt;

&lt;h2 id=&#34;ダッシュボード上のエラーが消えない:4d2882a3687d5c7df915f02afec1d585&#34;&gt;ダッシュボード上のエラーが消えない&lt;/h2&gt;

&lt;p&gt;ダッシュボードのトップにこのエラーメッセージが出てどう対応したら良いのかわからなかった。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;One last thing before your website is boosted and secured by Kloudsec&lt;/p&gt;
&lt;/blockquote&gt;

&lt;a href=&#34;https://yet.unresolved.xyz/images/2016-03-09/dashboard.png&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;
  &lt;amp-img src=&#34;https://yet.unresolved.xyz/images/2016-03-09/dashboard.png&#34; alt=&#34;dashboard&#34; width=2332 height=1334 layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;
&lt;/a&gt;


&lt;p&gt;DNSの設定が終わったらあとは勝手に最適化してくれるらしく、それに時間がかかっていたみたい。
つまりこれについても、こっちで出来ることは待つだけ。&lt;/p&gt;

&lt;h2 id=&#34;レスポンスが遅い:4d2882a3687d5c7df915f02afec1d585&#34;&gt;レスポンスが遅い&lt;/h2&gt;

&lt;p&gt;目に見えて遅かった。
GitHubにCNAMEを向けていた時の時間を計測していなかったので比較が出来ないけど、
Kloudsecはスーパーリロードした際に1秒弱かかっている。&lt;/p&gt;

&lt;a href=&#34;https://yet.unresolved.xyz/images/2016-03-09/slow.png&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;
  &lt;amp-img src=&#34;https://yet.unresolved.xyz/images/2016-03-09/slow.png&#34; alt=&#34;slow&#34; width=1124 height=810 layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;
&lt;/a&gt;


&lt;p&gt;HTMLのレスポンス時点で遅いので、どうしょうもない。&lt;/p&gt;

&lt;h2 id=&#34;page-optimizerがonだとampがinvalidになる:4d2882a3687d5c7df915f02afec1d585&#34;&gt;Page OptimizerがONだとAMPがinvalidになる&lt;/h2&gt;

&lt;p&gt;KloudsecのPage Optimizerというプラグインはページ速度とかを計るために、ページの末尾にJSを埋め込んでレスポンスを返す。
また、&lt;code&gt;head&lt;/code&gt;に直接書いたCSSの改行削除等も行っている模様。&lt;/p&gt;

&lt;p&gt;僕のブログは昨日記事にしたとおりAMP対応をしているので、JSが埋め込まれるのは非常に困る。&lt;/p&gt;

&lt;a href=&#34;https://yet.unresolved.xyz/images/2016-03-09/amp.png&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;
  &lt;amp-img src=&#34;https://yet.unresolved.xyz/images/2016-03-09/amp.png&#34; alt=&#34;amp&#34; width=1140 height=1612 layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;
&lt;/a&gt;


&lt;p&gt;これはDashboardからPage OptimizerをOFFにすれば解決出来る。&lt;/p&gt;

&lt;h3 id=&#34;追記:4d2882a3687d5c7df915f02afec1d585&#34;&gt;追記&lt;/h3&gt;

&lt;p&gt;ファウンダーの方からメールを頂きました。対応は迅速かつ丁寧で好印象でした。
レスポンスが遅いのはエッジサーバが日本にないから（ではないか）とのことで、近いうちに置くから待っててくれとのこと。&lt;/p&gt;

&lt;p&gt;AMPの件は、将来的にエンドポイントごとにPage OptimizerのON/OFFを切り替えられるようにするかもとのこと。
AMPについてはチーム全体でどうしようか考えてるそうでした。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AMP対応をした</title>
      <link>https://yet.unresolved.xyz/blog/2016/03/08/accelerated-mobile-pages/</link>
      <pubDate>Tue, 08 Mar 2016 15:25:13 +0900</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2016/03/08/accelerated-mobile-pages/</guid>
      <description>

&lt;p&gt;巷で話題のAMP対応をしました。
僕のブログはこの規模なので、別ページとして作るのではなく純粋にページ自体を作り変えました。&lt;/p&gt;

&lt;h2 id=&#34;amp:248155386e4621d756694486f44e789c&#34;&gt;AMP？&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ampproject.org/&#34;&gt;Accelerated Mobile Pages Project&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For many, reading on the mobile web is a slow, clunky and frustrating experience - but it doesn’t have to be that way. The Accelerated Mobile Pages (AMP) Project is an open source initiative that embodies the vision that publishers can create mobile optimized content once and have it load instantly everywhere.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;モバイル用に爆速な感じのページを作ろうぜってやつですね。
そのためにHTMLをゴリゴリ書き換えなければいけないです。&lt;/p&gt;

&lt;p&gt;いろいろなサイトを見てると、AMP対応のために別ページを用意して&lt;code&gt;rel&lt;/code&gt;を張るパターンが多いようでした。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ampproject.org/docs/guides/discovery.html#linking-pages-with-ltlinkgt&#34;&gt;Make Your Page Discoverable&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;amphtml&amp;quot; href=&amp;quot;https://www.example.com/url/to/amp/document.html&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;実際対応してみた感想としては、この対応が一番理想的だと思っています。&lt;/p&gt;

&lt;h2 id=&#34;始め方:248155386e4621d756694486f44e789c&#34;&gt;始め方&lt;/h2&gt;

&lt;p&gt;ドキュメントはかなり整理されているので、特に詰まることなく実装は出来ると思います。&lt;/p&gt;

&lt;p&gt;このページにある通り、必須の項目を&lt;code&gt;head&lt;/code&gt;タグ内に入れたりするだけで始められます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ampproject.org/docs/get_started/create/basic_markup.html&#34;&gt;Create Your AMP HTML Page&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html amp lang=&amp;quot;en&amp;quot;&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;Hello, AMPs&amp;lt;/title&amp;gt;
    &amp;lt;link rel=&amp;quot;canonical&amp;quot; href=&amp;quot;http://example.ampproject.org/article-metadata.html&amp;quot; /&amp;gt;
    &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width,minimum-scale=1,initial-scale=1&amp;quot;&amp;gt;
    &amp;lt;script type=&amp;quot;application/ld+json&amp;quot;&amp;gt;
      {
        &amp;quot;@context&amp;quot;: &amp;quot;http://schema.org&amp;quot;,
        &amp;quot;@type&amp;quot;: &amp;quot;NewsArticle&amp;quot;,
        &amp;quot;headline&amp;quot;: &amp;quot;Open-source framework for publishing content&amp;quot;,
        &amp;quot;datePublished&amp;quot;: &amp;quot;2015-10-07T12:02:41Z&amp;quot;,
        &amp;quot;image&amp;quot;: [
          &amp;quot;logo.jpg&amp;quot;
        ]
      }
    &amp;lt;/script&amp;gt;
    &amp;lt;style amp-boilerplate&amp;gt;body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}&amp;lt;/style&amp;gt;&amp;lt;noscript&amp;gt;&amp;lt;style amp-boilerplate&amp;gt;body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}&amp;lt;/style&amp;gt;&amp;lt;/noscript&amp;gt;
    &amp;lt;script async src=&amp;quot;https://cdn.ampproject.org/v0.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;h1&amp;gt;Welcome to the mobile web&amp;lt;/h1&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;に&lt;code&gt;amp&lt;/code&gt;もしくは「⚡」を入れることでAMP対応を明示するようです。
せっかくなので、このブログは絵文字で対応しました。&lt;/p&gt;

&lt;h2 id=&#34;imgタグの置き換え:248155386e4621d756694486f44e789c&#34;&gt;IMGタグの置き換え&lt;/h2&gt;

&lt;p&gt;基本的にAMPは機能拡張ではなく制限なので、既存のHTMLの置き換えや削除で対応出来ます。
まず最初に説明されているのは画像の表示について。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;amp-img src=&amp;quot;welcome.jpg&amp;quot; alt=&amp;quot;Welcome&amp;quot; height=&amp;quot;400&amp;quot; width=&amp;quot;800&amp;quot;&amp;gt;&amp;lt;/amp-img&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;AMP用のタグが用意されているので、それに置き換える必要があります。
&lt;code&gt;layout&lt;/code&gt;などの属性も用意されているので、少しだけ融通は効くようです。&lt;code&gt;width&lt;/code&gt;と&lt;code&gt;height&lt;/code&gt;は必須のようでした。きついですね。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ampproject.org/docs/guides/amp_replacements.html#include-an-image&#34;&gt;Include Iframes and Media#include-an-image&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;サイズを指定しなくても横幅に応じて良きに計らってほしいのですが、僕はその記述をドキュメントから見つけられませんでした。&lt;/p&gt;

&lt;h2 id=&#34;スタイルの定義:248155386e4621d756694486f44e789c&#34;&gt;スタイルの定義&lt;/h2&gt;

&lt;p&gt;スタイルシートは&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;内にベタで置くことになっているようです。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;style amp-custom&amp;gt;
  /* any custom style goes here */
  body {
    background-color: white;
  }
  amp-img {
    background-color: gray;
    border: 1px solid black;
  }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この&lt;code&gt;&amp;lt;style amp-custom&amp;gt;&lt;/code&gt;タグは1ページに1個までとの制約があったり、&lt;code&gt;:not()&lt;/code&gt;など、禁止されている機能もあるようです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ampproject.org/docs/guides/responsive/style_pages.html#disallowed-styles&#34;&gt;How to Style Your Pages#disallowed-styles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;外部スタイルシートは原則&lt;strong&gt;フォント読み込みのみ可&lt;/strong&gt;、とのことです。Google Fontsなどですね。&lt;/p&gt;

&lt;p&gt;BootstrapやSkeletonなどのCSSフレームワークはどうしたらいいんだろうと思ったのですが、
そもそもAMPの目的を考えると、CSSフレームワークが必要なほどのデザインを施すこと自体が間違っているのかもしれません。&lt;/p&gt;

&lt;p&gt;僕は今回の対応で3rdパーティ系のライブラリはすべて撤去しました。（&lt;code&gt;.container&lt;/code&gt;とグリッドシステムくらいしか使っていなかったので、そもそも不要でした。）&lt;/p&gt;

&lt;h2 id=&#34;javascriptの排除:248155386e4621d756694486f44e789c&#34;&gt;JavaScriptの排除&lt;/h2&gt;

&lt;p&gt;原則禁止のようです。
Google Analytics等は専用の記述が用意されていました。こういった例外的な扱いが他にもいくつかあるようです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://developers.google.com/analytics/devguides/collection/amp-analytics/&#34;&gt;Adding Analytics to your AMP pages  |  Analytics for AMP Pages  |  Google Developers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;このブログではコードハイライトのために&lt;a href=&#34;https://highlightjs.org/&#34;&gt;highlight.js&lt;/a&gt;を使っていたのですが、それもこの対応で外しました。&lt;/p&gt;

&lt;h2 id=&#34;バリデーション:248155386e4621d756694486f44e789c&#34;&gt;バリデーション&lt;/h2&gt;

&lt;p&gt;当該ページのURL末尾に&lt;code&gt;#development=1&lt;/code&gt;をつけてChromeでアクセスすれば、Chrome DevTools consoleにバリデーション結果が表示されるようになっています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ampproject.org/docs/guides/validate.html&#34;&gt;Validate AMP Pages&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;個々のエラーメッセージに応じた対応方法なども記載されているので、やはりドキュメントは充実していますね。&lt;/p&gt;

&lt;h2 id=&#34;終わりに:248155386e4621d756694486f44e789c&#34;&gt;終わりに&lt;/h2&gt;

&lt;p&gt;JS禁止などを見てもわかるように、やはりAMPはAMP用のページを別で作るのが理想的な気がします。
会社で運営しているサイトも対応をしたいのですが、あまりコストの低い作業でもないので一旦保留にしています。&lt;/p&gt;

&lt;p&gt;Google Search Console等でもAMP対応の状況が表示されるようになっているので、おそらくAMPはこのまま普及していくのではないかと思っています。&lt;/p&gt;

&lt;p&gt;仕様も今後変わっていくと思うので、その辺も追う元気があれば対応していきたいと思います。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>やはり僕のバーティカルリズムは間違っている</title>
      <link>https://yet.unresolved.xyz/blog/2016/03/02/i-misunderstood-vertical-rhythm/</link>
      <pubDate>Wed, 02 Mar 2016 09:55:16 +0900</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2016/03/02/i-misunderstood-vertical-rhythm/</guid>
      <description>

&lt;p&gt;まずこれを見ていただきたい。&lt;/p&gt;

&lt;a href=&#34;https://yet.unresolved.xyz/images/2016-03-02/invalid.png&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;
  &lt;amp-img src=&#34;https://yet.unresolved.xyz/images/2016-03-02/invalid.png&#34; alt=&#34;invalid&#34; width=1140 height=724 layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;
&lt;/a&gt;


&lt;p&gt;2016年3月現在の僕のブログのデザイン。
&lt;code&gt;line-height&lt;/code&gt;を意識しているのでブロック自体はバーティカルリズムから外れていない。&lt;/p&gt;

&lt;p&gt;が、文章のベースラインが思いっきりずれてしまっている。
前から薄々気付いてはいたけど、やはり僕のバーティカルリズムは間違っていた。&lt;/p&gt;

&lt;h2 id=&#34;ベースラインを揃えたバーティカルリズムの実装:443c84079275f642b6c27f534bf108fb&#34;&gt;ベースラインを揃えたバーティカルリズムの実装&lt;/h2&gt;

&lt;p&gt;以下の記事が本当に参考になった。素晴らしい記事だと思う。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://terkel.jp/archives/2014/11/baseline-grid-pseudo-elements/&#34;&gt;擬似要素を利用したベースライン・グリッド · terkel.jp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;詳細はリンク先を見ていただきたい。もはや尊敬してしまうくらいの内容だったので、転載のようなことはしたくない。&lt;/p&gt;

&lt;p&gt;上記記事によれば、ベースラインを揃えるために&lt;code&gt;before&lt;/code&gt;、&lt;code&gt;after&lt;/code&gt;擬似要素を使ってブロックを押し広げることで実装すればいいとのこと。
この記事に指導いただいて再実装してみよう。&lt;/p&gt;

&lt;a href=&#34;https://yet.unresolved.xyz/images/2016-03-02/valid.png&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;
  &lt;amp-img src=&#34;https://yet.unresolved.xyz/images/2016-03-02/valid.png&#34; alt=&#34;valid&#34; width=1130 height=784 layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;
&lt;/a&gt;


&lt;p&gt;わかりやすさのために擬似要素に背景色をつけている。
縦のグリッドが揃っていないことはスルーしてほしい。
なかなかコストの高い実装になったが、ベースラインを綺麗に揃えることが出来た。&lt;/p&gt;

&lt;p&gt;しかし、高さの予測できないコンテンツが入り込むと現状崩れてしまう。例えば、画像とか。
これについては未解決。&lt;/p&gt;

&lt;h2 id=&#34;グリッドを表示するchrome-extension:443c84079275f642b6c27f534bf108fb&#34;&gt;グリッドを表示するChrome Extension&lt;/h2&gt;

&lt;p&gt;この改修をするにあたって以下のChrome Extensionを利用した。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/the-grids/jgfgflhpelebngbkojdfjjekjnkgdcag&#34;&gt;The Grids - Chrome ウェブストア&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;探すのが面倒で導入してなかったが、これを機に使ってみたら想像以上に便利だった。&lt;/p&gt;

&lt;h2 id=&#34;参考にさせていただきました:443c84079275f642b6c27f534bf108fb&#34;&gt;参考にさせていただきました&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://terkel.jp/archives/2014/11/baseline-grid-pseudo-elements/&#34;&gt;擬似要素を利用したベースライン・グリッド · terkel.jp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://terkel.jp/demo/baseline-grid.html&#34;&gt;terkel.jp/demo/baseline-grid.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>text-rendering: optimizeLegibility;を指定するとWebフォントの読み込みがおかしくなる</title>
      <link>https://yet.unresolved.xyz/blog/2016/03/01/text-rendering-optimizelegibility-and-web-fonts/</link>
      <pubDate>Tue, 01 Mar 2016 14:08:26 +0900</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2016/03/01/text-rendering-optimizelegibility-and-web-fonts/</guid>
      <description>

&lt;p&gt;よくやるこれ。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;body {
  text-rendering: optimizeLegibility;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;-webkit-font-smoothing: antialiased&lt;/code&gt;と一緒に設定したりするやつ。
僕は最近、太い文字がマイブームなのでこっちの設定は外したりしてます。余談だね。&lt;/p&gt;

&lt;h2 id=&#34;webフォントが適用されない:2acb9387331612b63a2d67e9f2d06529&#34;&gt;Webフォントが適用されない&lt;/h2&gt;

&lt;p&gt;ちょうどブログのデザインを変えてたら、何故か毎回リロードしないとGoogle Fontsから読ませてるOpen Sansが効かなくなって困った。
はじめはキャッシュとかChromeの不調かなんかかと思ってたんだけど、AndroidのChromeでも再現するし何かがおかしい。&lt;/p&gt;

&lt;p&gt;上記のプロパティを外したら直ったので、これが原因なのかもしれない。&lt;/p&gt;

&lt;h2 id=&#34;text-rendering:2acb9387331612b63a2d67e9f2d06529&#34;&gt;text-rendering？&lt;/h2&gt;

&lt;p&gt;文字列の描画についてのプロパティ。
かなりぼんやりした曖昧な情報がネットに溢れてるので、結局なんなのよと言いたくなった人は多いと思う。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://on-ze.com/archives/609&#34;&gt;CSSの［text-rendering: optimizeLegibility;］は指定しないほうが無難かも。 - ONZE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://terkel.jp/archives/2012/09/text-rendering-optimizelegibility/&#34;&gt;text-rendering: optimizeLegibility · terkel.jp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.pro-s.co.jp/engineerblog/design/post_5246.html&#34;&gt;text-renderingって何？！ | Webサイト制作ならプロフェッサ（東京都/品川区）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;僕はそういうとき、MDNを信用して参考にさせてもらってます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/CSS/text-rendering&#34;&gt;text-rendering - CSS | MDN&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Summaryにはこうある。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The text-rendering CSS property provides information to the rendering engine about what to optimize for when rendering text.&lt;/p&gt;

&lt;p&gt;The browser makes trade-offs among speed, legibility, and geometric precision.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;text-rendering&lt;/code&gt;はテキストを何に最適化して表示するかをレンダリングエンジンに提示する。&lt;/strong&gt;
この値によって、ブラウザの処理はレンダリング速度や可読性、配置精度のいずれかのトレードオフとなる。&lt;/p&gt;

&lt;h2 id=&#34;つまり何に使うの:2acb9387331612b63a2d67e9f2d06529&#34;&gt;つまり何に使うの？&lt;/h2&gt;

&lt;p&gt;この3つのどれを求めるのよってのを伝える属性なわけですね。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;描画速度&lt;/li&gt;
&lt;li&gt;読みやすさ&lt;/li&gt;
&lt;li&gt;配置の正確さ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;geometric precision&lt;/code&gt;はちょっと訳せなかったけど、文字の配置精度とかそういう意味だと解釈しました。&lt;/p&gt;

&lt;p&gt;そして注釈。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The text-rendering property is an SVG property that is not defined in any CSS standard. However, Gecko and WebKit browsers let you apply this property to HTML and XML content on Windows, Mac OS X and Linux.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;text-rendering&lt;/code&gt;はSVGのための属性でCSSの標準実装じゃないんだけど、WebKitとかGeckoだと使えますよと。&lt;/p&gt;

&lt;p&gt;何も考えずに指定するのはNGな気がしますね。
内容に自信がないのでコメントで指摘ください。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>「CTF for Starter in IISEC」に行ってきた</title>
      <link>https://yet.unresolved.xyz/blog/2016/02/22/ctf-for-starter/</link>
      <pubDate>Mon, 22 Feb 2016 14:36:12 +0900</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2016/02/22/ctf-for-starter/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://atnd.org/events/74688&#34;&gt;CTF for Starter in IISEC&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;13時から17時まで、情報セキュリティ大学院大学にて開催された上記イベントに参加してきました。&lt;/p&gt;

&lt;h2 id=&#34;参加の動機:293f710ae3a95ce09bad1d9ac8c56c55&#34;&gt;参加の動機&lt;/h2&gt;

&lt;p&gt;参加の理由は、もともとCTFやセキュリティに興味があったから。
CTFは参加する気ないけど・・・。&lt;/p&gt;

&lt;p&gt;イベント内でも説明されてたとおり、CTFはやっぱりハードルが高いし、
勉強出来るならしてみたいって人は多いと思う。
このイベントはそういった人に向けたものとのことだったので、参加を決めました。&lt;/p&gt;

&lt;h2 id=&#34;会場:293f710ae3a95ce09bad1d9ac8c56c55&#34;&gt;会場&lt;/h2&gt;

&lt;p&gt;情報セキュリティ大学院大学さんの教室ひとつを貸しきっての開催でした。
コンクリート打ちっぱなしの無機質さがおしゃれだった。&lt;/p&gt;

&lt;p&gt;流石に電源だとかの設備も良く、特に不満なくイベントを終えられました。&lt;/p&gt;

&lt;h2 id=&#34;事前準備:293f710ae3a95ce09bad1d9ac8c56c55&#34;&gt;事前準備&lt;/h2&gt;

&lt;p&gt;前準備として、いくつかのソフトのインストールが必要だった。
基本的にWindows上での操作になるので、Macを使ってる人はModernIEを導入した上での準備が必要。&lt;/p&gt;

&lt;p&gt;導入したソフトは以下の通り。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Wireshark&lt;/li&gt;
&lt;li&gt;OWASP ZAP&lt;/li&gt;
&lt;li&gt;Firefox&lt;/li&gt;
&lt;li&gt;Ollydbg&lt;/li&gt;
&lt;li&gt;AutoPsy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ModernIEはVirtualBox上で動かしてたんだけど、GuestOSにCPUを1コアしか使わせてなかったせいでめちゃくちゃ重かった。
会の中盤で気づいて直してからは快適でした。&lt;/p&gt;

&lt;h2 id=&#34;開催内容:293f710ae3a95ce09bad1d9ac8c56c55&#34;&gt;開催内容&lt;/h2&gt;

&lt;p&gt;ネットワーク、ウェブ、フォレンジックのジャンルごとに幾つか問題が出題されて、
説明を受けながら自分でも頑張って解いていく感じ。
とっつきづらい問題でも挑戦してみる意欲を持てる感じに作られていたので、
楽しみながら勉強することが出来たと思う。&lt;/p&gt;

&lt;p&gt;周りもちょこちょこ見てたけど、開催者の方が丁寧にフォローをしてたので、躓いたまま放置されたりって人は居なかったみたい。
好印象だった。&lt;/p&gt;

&lt;h3 id=&#34;良かったこと:293f710ae3a95ce09bad1d9ac8c56c55&#34;&gt;良かったこと&lt;/h3&gt;

&lt;p&gt;何より一番ためになったのは、ツールの使い方だと思う。
&lt;a href=&#34;https://www.wireshark.org/&#34;&gt;Wireshark&lt;/a&gt;とか&lt;a href=&#34;http://www.sleuthkit.org/autopsy/&#34;&gt;Autopsy&lt;/a&gt;とか、
名前は知ってても発展的な使い方を覚える機会が少ないから、それが学べたのは良かった。
まだまだわかってない機能ばかりだから、そこはこれからやっていったほうが良いと思うけど。&lt;/p&gt;

&lt;p&gt;出題サーバの不調等のトラブルもあったけど、比較的すぐ修復されていたし特に気にはならなかった。&lt;/p&gt;

&lt;h2 id=&#34;今後:293f710ae3a95ce09bad1d9ac8c56c55&#34;&gt;今後&lt;/h2&gt;

&lt;p&gt;やっぱり自分が身をおいているのがWebの世界なので、Webが一番興味を持つことが出来た。
だからWebは特に意識しなくても勉強をしていけると思うけど、
フォレンジックやネットワークについてはちゃんと時間を取ってやっていきたいなと思ってる。&lt;/p&gt;

&lt;p&gt;この勉強会はStarterなだけあって、何度も参加すればその分恩恵があるかというとそういうわけではないので、
今後は独学か、また別の勉強会で学んでいけたらいいかなと。&lt;/p&gt;

&lt;h2 id=&#34;終わりに:293f710ae3a95ce09bad1d9ac8c56c55&#34;&gt;終わりに&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://twitter.com/mochigomactf&#34;&gt;mochigoma(@mochigomaCTF)&lt;/a&gt;の皆様と&lt;a href=&#34;https://www.iisec.ac.jp/&#34;&gt;情報セキュリティ大学院大学&lt;/a&gt;様、ありがとうございました。
大変ためになりました。&lt;/p&gt;

&lt;h3 id=&#34;その他参加者のブログ:293f710ae3a95ce09bad1d9ac8c56c55&#34;&gt;その他参加者のブログ&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://followcolor.hatenadiary.jp/entry/2016/02/21/221917&#34;&gt;CTF for Starter in IISEC 感想 - followcolorのブログ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;勝手に記載。僕なんかよりもセキュリティに造詣が深い方のようなので、参考になりました。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Googleカスタム検索のデザインが崩れる</title>
      <link>https://yet.unresolved.xyz/blog/2016/02/19/broken-the-design-of-cse/</link>
      <pubDate>Fri, 19 Feb 2016 12:44:17 +0900</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2016/02/19/broken-the-design-of-cse/</guid>
      <description>

&lt;a href=&#34;https://yet.unresolved.xyz/images/2016-02-19/cse.png&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;
  &lt;amp-img src=&#34;https://yet.unresolved.xyz/images/2016-02-19/cse.png&#34; alt=&#34;cse&#34; width=674 height=150 layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;
&lt;/a&gt;


&lt;h2 id=&#34;なぜ崩れるのか:823fb9b45a070a4729c0c404dd848b3b&#34;&gt;なぜ崩れるのか&lt;/h2&gt;

&lt;p&gt;結論から言えばCSSの&lt;code&gt;box-sizing&lt;/code&gt;の値によって崩れる。
特にBootstrapを使ってるサイトで崩れることが多いんじゃないでしょうか。&lt;/p&gt;

&lt;p&gt;なぜならBootstrapはワイルドカードでこういう設定がされているから。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;該当ソースはここでしょうか。Bootstrapの構造がよくわからない。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/twbs/bootstrap/blob/e38f066d8c203c3e032da0ff23cd2d6098ee2dd6/less/scaffolding.less#L12&#34;&gt;bootstrap/scaffolding.less at e38f066d8c203c3e032da0ff23cd2d6098ee2dd6 · twbs/bootstrap&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;border-box&lt;/code&gt;のほうが扱いやすいことが多いので、この設定に対して文句とかはないです。
こうあるべきだと思う。&lt;/p&gt;

&lt;h2 id=&#34;崩れを直す方法:823fb9b45a070a4729c0c404dd848b3b&#34;&gt;崩れを直す方法&lt;/h2&gt;

&lt;p&gt;というわけで、カスタム検索のスクリプトを特定のタグで囲んで、そのタグに対してワイルドカードで&lt;code&gt;box-sizing&lt;/code&gt;の値を指定してしまえば直る。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.cse-wrapper * {
    -webkit-box-sizing: content-box;
    -moz-box-sizing: content-box;
    box-sizing: content-box;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ワイルドカードは使いたくないよね、でもしょうがない。
ベンダプレフィックスは必要なんだっけ？ちょっとわかんないや。&lt;/p&gt;

&lt;h2 id=&#34;この事象について:823fb9b45a070a4729c0c404dd848b3b&#34;&gt;この事象について&lt;/h2&gt;

&lt;p&gt;結構ありがちな話らしい。
探せば同様の事象について掲載している記事もあるけど、
HTMLをベタで書くという解決方法なので、根本的な解決ではないように思う。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://webkaru.net/wordpress/google-custom-search-design/&#34;&gt;HTMLフォームを使用したGoogleカスタム検索のデザイン変更方法 - WordPressの使い方と設定 - Webkaru&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.02320.net/google_custom_search_optout_js/&#34;&gt;超軽量♪Googleカスタム検索はJavaScript外すと改造し放題&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.696.jp/txt/937/&#34;&gt;googleカスタム検索をHTMLに書き換える | 696graphic [BLOG]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GoogleもHTMLベタでやっていいよとは言ってるが、Googleカスタム検索の管理画面から発行できるのはコードだし、
Google自身もこう書いている。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://support.google.com/customsearch/answer/1351747?hl=ja&#34;&gt;HTML フォームを使用した検索ボックスの作成 - カスタム検索 ヘルプ&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;HTML フォームのコードは利便性のためにのみ提供されています。Google カスタム検索ではこの問題に対するサポートは提供しておりません。すべての無料の検索エンジンに Google ブランドを表示する必要があります。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;確かに、JSでのレンダリングだと目に見えて遅延するけどね。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MySQL5.6&#43;ruby-mysql2でlibmysqlclient_16 not found</title>
      <link>https://yet.unresolved.xyz/blog/2016/02/04/libmysqlclient16-not-found/</link>
      <pubDate>Thu, 04 Feb 2016 18:00:44 +0900</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2016/02/04/libmysqlclient16-not-found/</guid>
      <description>&lt;p&gt;せっかくなのでMySQLを5.5から5.6にして使おうとしたらエラーした。
MySQL5.6のインストールはこの記事が非常に分かりやすかった。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.ybbo.net/2014/01/22/%E3%80%90%E3%82%B7%E3%83%B3%E3%83%97%E3%83%AB%E3%80%91centos6%E3%81%ABmysql5-6%E3%82%92yum%E3%81%A7%E7%B0%A1%E5%8D%98%E3%81%AB%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/&#34;&gt;【シンプル】CentOS6にMySQL5.6をyumで簡単にインストールする手順 | 田舎に住みたいエンジニアの日記&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ところがRails側で&lt;code&gt;ruby-mysql2&lt;/code&gt;と接合させようとするとライブラリ参照でエラー。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;LoadError: /usr/lib64/mysql/libmysqlclient.so.18: version `libmysqlclient_16&#39; not found (required by /var/www/pj/shared/bundle/ruby/2.2.0/extensions/x86_64-linux/2.2.0-static/mysql2-0.3.18/mysql2/mysql2.so) - /var/www/pj/shared/bundle/ruby/2.2.0/extensions/x86_64-linux/2.2.0-static/mysql2-0.3.18/mysql2/mysql2.so
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;困ります。
どうやら&lt;code&gt;ruby-mysql2&lt;/code&gt;を入れるタイミングで問題があったり、そもそもMySQL5.6のライブラリ側にバグがあるっていう話もあった。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://myfinder.hatenablog.com/entry/2013/04/22/150219&#34;&gt;MySQL5.6 だと ruby-mysql2 が入ったふりをする - まいんだーのはてなブログ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://qiita.com/pollseed/items/b7d187dbbd64b29820d4&#34;&gt;awsでcapistrano動かす作業ログ - Qiita&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MySQLを入れたり消したりしてたら直ったので原因も対策も不明。謎。もうやめてね。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rails&#43;RDSでMysql2::Error: Illegal mix of collations</title>
      <link>https://yet.unresolved.xyz/blog/2016/02/04/illegal-mix-of-collations/</link>
      <pubDate>Thu, 04 Feb 2016 17:52:48 +0900</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2016/02/04/illegal-mix-of-collations/</guid>
      <description>

&lt;p&gt;エラーの全貌はこう。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ActionView::Template::Error (Mysql2::Error: Illegal mix of collations (latin1_swedish_ci,IMPLICIT) and (utf8_general_ci,COERCIBLE) for operation &#39;like&#39;: SELECT...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;DEFAULT_CHARACTER_SET_NAME&lt;/code&gt;が&lt;code&gt;latin1&lt;/code&gt;になってしまっているらしく、&lt;code&gt;like&lt;/code&gt;検索で落ちてしまった。
MySQLの設定を変えなきゃいけないと思い込んでいて、RDSを使っていたからどうしょうもないのかと思って結構焦った。&lt;/p&gt;

&lt;p&gt;でもRDSもMySQLの設定は変えられるらしい。そりゃそうか。&lt;/p&gt;

&lt;a href=&#34;https://yet.unresolved.xyz/images/2016-02-04/params.png&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;
  &lt;amp-img src=&#34;https://yet.unresolved.xyz/images/2016-02-04/params.png&#34; alt=&#34;params&#34; width=974 height=496 layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;
&lt;/a&gt;


&lt;p&gt;これで直りました。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;ALTER DATABASE table_name COLLATE = &#39;utf8_general_ci&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;参考にさせていただきました:4b3e93c1f0fc95c9a54247a6e176ec82&#34;&gt;参考にさせていただきました&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://mariadb.com/kb/en/mariadb/setting-character-sets-and-collations/&#34;&gt;Setting Character Sets and Collations - MariaDB Knowledge Base&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>crontabのValidationが出来るcrontab.guruが便利</title>
      <link>https://yet.unresolved.xyz/blog/2016/01/26/cron-validator/</link>
      <pubDate>Tue, 26 Jan 2016 14:34:43 +0900</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2016/01/26/cron-validator/</guid>
      <description>&lt;p&gt;cron、僕は好きです。ありものでなんとか出来るところが好きです。
でも記法はいつも忘れるんですよね。あと正しいのかどうなのかがチェックしづらい。
そこでこの&lt;a href=&#34;http://crontab.guru/&#34;&gt;crontab.guru&lt;/a&gt;が非常に便利でした。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://crontab.guru/&#34;&gt;crontab.guru - the cron schedule expression editor&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;正しさのチェックに加えていつ実行されるのかを文章で教えてくれる。
記法についても注釈があるのでこのサイトで完結してしまう。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Asset Pipelineのコンパイル対象を追加する</title>
      <link>https://yet.unresolved.xyz/blog/2016/01/20/add-compile-target-of-asset-pipeline-at-rails/</link>
      <pubDate>Wed, 20 Jan 2016 16:15:58 +0900</pubDate>
      
      <guid>https://yet.unresolved.xyz/blog/2016/01/20/add-compile-target-of-asset-pipeline-at-rails/</guid>
      <description>&lt;p&gt;デフォルトだと&lt;code&gt;application.css&lt;/code&gt;とかじゃないですか。
でも例えば管理画面を作ったりとかでごっそりデザインの違うページを作るときに少し困ったんです。&lt;/p&gt;

&lt;p&gt;まあ普通はそういう時、モジュールごと完全に分けるべきなのか・・・。疎結合ね・・・。&lt;/p&gt;

&lt;p&gt;解決方法はエラーに出てました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ActionView::Template::Error (Asset was not declared to be precompiled in production.
Add `Rails.application.config.assets.precompile += %w( application_target.css )` to `config/initializers/assets.rb` and restart your server):
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;config/initializers/assets.rb&lt;/code&gt;に追記すればいい。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Rails.application.config.assets.precompile += %w( application_target.css )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Rails覚えらんないよー&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
